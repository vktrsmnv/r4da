---
title: "Causality II"
subtitle: "Data Analytics and Visualization with R<br>Session 5"
title-slide-attributes:
  data-background-size: stretch
  data-slide-number: none
auto-stretch: false
institute: "University of Mannheim<br>Spring 2023"
author: "Viktoriia Semenova"
footer: "[ðŸ”— r4da.live](https://r4da.live/)"
logo: images/logo.png
format:
  revealjs:
    theme: ../slides.scss
    transition: fade
    incremental: true   
    slide-number: true
    chalkboard: true
execute:
  echo: true
editor_options: 
  chunk_output_type: console
---

```{r setup, include=FALSE}
p_needed <- c("tidyverse", "janitor", "icons", "countdown", "showtext", "ggdag", "gt")

# check if they are already installed, install if not installed
lapply(p_needed[!(p_needed %in% rownames(installed.packages()))], install.packages, repos = "http://cran.us.r-project.org")

# load the packages
lapply(p_needed, library, character.only = TRUE)

# set width of code output
options(width = 65)

# set figure parameters for knitr
knitr::opts_chunk$set(
  fig.width = 7, # 7" width
  fig.asp = 0.618, # the golden ratio
  fig.retina = 3, # dpi multiplier for displaying HTML output on retina
  fig.align = "center", # center align figures
  dpi = 300 # higher dpi, sharper image
)


font_add_google(name = "Gochi Hand")
showtext::showtext_auto()
# set theme for ggplot2
ggplot2::theme_set(ggplot2::theme_minimal(base_size = 14)) +
  theme(plot.title = element_text(face = "bold"))

governors <- readr::read_csv("https://r4da.live/files/data/external_data/governors.csv")
trains <- readr::read_tsv("../data/trains.tsv") %>% clean_names()
```

# Intro

## Housekeeping

-   Decide on your teammates by Monday: DM me on Slack/email
-   Deadline for Problem Set 4: today, 23:59
-   Deadline for Problem Set 5: Tuesday March 21, 23:59

<!-- ## Your GitHub Stats ðŸ¤“ -->

<!-- ::: columns -->

<!-- ::: {.column width="50%"} -->

<!-- ![](images/PS03_by_hour.png) -->

<!-- ::: -->

<!-- ::: {.column width="50%"} -->

<!-- ![](images/PS01_by_wday.png) -->

<!-- ::: -->

<!-- ::: -->

## Quiz: Which of these statements are correct? {.smaller}

```{r}
#| echo: false
countdown(minutes = 4, color_background = "white")
```

::: columns
::: {.column width="55%"}
```{r}
#| echo: false
#| fig-asp: 1
set.seed(3444)
tibble(
  beauty = rnorm(2500),
  talent = rnorm(2500),
  score = beauty + talent,
  c85 = quantile(score, .85),
  star = ifelse(score>=c85,1,0)
) %>% 
  filter(star == 1) %>% 
  janitor::clean_names(case = "sentence") %>% 
  ggplot(aes(x = Talent, y = Beauty)) +
  geom_point(size = 3, shape=19, alpha = 0.5) +
  # xlim(-4, 4) + ylim(-4, 4) +
  labs(title = "Is Beauty Related to Talent among Actors?",
       subtitle = "Sample: Movie stars") +
  geom_smooth(method = "lm", se = F, color = "#800010") +
  scale_x_continuous(breaks = scales::pretty_breaks()) +
  scale_y_continuous(breaks = scales::pretty_breaks()) +
  theme_minimal() +
  theme(panel.grid.minor = element_blank(),
        text = element_text(size = 18),
        plot.title.position = "plot"
  )
```
:::

::: {.column width="45%"}
For the relationship between *Beauty* and *Talent*, being a *Movie star* is:

1.  a confounder and thus should be accounted for.
2.  a mediator and thus should not be accounted for.
3.  a collider and here we accounted for it when fitting the regression line.
4.  a collider and accounting for it masks the true relationship between *Beauty* and *Talent*.
:::
:::

## Major Types of Association

<br>

::: columns
::: {.column width="33%"}
#### Confounding {.center}

```{dot}
//| echo: false
//| fig-width: 4
//| fig-height: 3
//| out-width: 100%
digraph D {
  node [shape=circle, fontname="AtkinsonHyperlegible-Regular"];
  edge [minlen = 1.2, arrowhead = vee, arrowsize=0.5];
  a [label = "X"];
  b [label = "Y"];
  c [label = "Z"];
  
  {rank=same a b};
  {rank=sink c};
  a->b;
  c->a;
  c->b;
}
```
:::

::: {.column width="33%"}
#### Mediation {.center}

```{dot}
//| echo: false
//| fig-width: 4
//| fig-height: 3
//| out-width: 100%
digraph D {
node [shape=circle, fontname="AtkinsonHyperlegible-Regular"];
  edge [minlen = 1.2, arrowhead = vee, arrowsize=0.5];
  a [label = "X"];
  b [label = "Y"];
  c [label = "Z"];
  
  {rank=same a b};
  {rank=sink c};
  a->b;
  a->c;
  c->b;
}
```
:::

::: {.column width="33%"}
#### Collision {.center}

```{dot}
//| echo: false
//| fig-width: 4
//| fig-height: 3
//| out-width: 100%
digraph D {
node [shape=circle, fontname="AtkinsonHyperlegible-Regular"];
  edge [minlen = 1.2, arrowhead = vee, arrowsize=0.5];
  a [label = "X"];
  b [label = "Y"];
  c [label = "Z"];
  
  {rank=same a b};
  {rank=sink c};
  a->b;
  a->c;
  b->c;
}
```
:::
:::

## Collider Bias: Movie Stars

::: columns
::: {.column width="50%"}
```{r}
#| echo: false
#| fig-asp: 1
set.seed(3444)
tibble(
  beauty = rnorm(2500),
  talent = rnorm(2500),
  score = beauty + talent,
  c85 = quantile(score, .85),
  star = ifelse(score>=c85,1,0)
) %>% 
  filter(star == 1) %>% 
  janitor::clean_names(case = "sentence") %>% 
  ggplot(aes(x = Talent, y = Beauty)) +
  geom_point(size = 3, shape=19, alpha = 0.3, color = "#800010") +
  # xlim(-4, 4) + ylim(-4, 4) +
  labs(title = "Is Beauty Related to Talent among Actors?",
       subtitle = "Sample: Movie stars") +
  geom_smooth(method = "lm", se = F, color = "#800010") +
  scale_x_continuous(breaks = scales::pretty_breaks()) +
  scale_y_continuous(breaks = scales::pretty_breaks()) +
  theme_minimal() +
  theme(panel.grid.minor = element_blank(),
        text = element_text(size = 18),
        plot.title.position = "plot"
  )+ xlim(-4, 4) + ylim(-4, 4)
```
:::

::: {.column width="50%"}
```{r}
#| echo: false
#| fig-asp: 1
set.seed(3444)
tibble(
  beauty = rnorm(2500),
  talent = rnorm(2500),
  score = beauty + talent,
  c85 = quantile(score, .85),
  star = ifelse(score>=c85,1,0) %>% as.character()
) %>% 
  # filter(star == 1) %>% 
  janitor::clean_names(case = "sentence") %>% 
  ggplot(aes(x = Talent, y = Beauty, color = Star)) +
  geom_point(size = 3, shape=19, alpha = 0.3) +
  # xlim(-4, 4) + ylim(-4, 4) +
  labs(title = "Is Beauty Related to Talent among Actors?",
       subtitle = "Sample: Movie Stars and Non-Stars") +
  geom_smooth(method = "lm", se = F, color = "#800010", linewidth = 2) +
  scale_x_continuous(breaks = scales::pretty_breaks()) +
  scale_y_continuous(breaks = scales::pretty_breaks()) +
  theme_minimal() +
  scale_color_manual(values = c("#000000", "#800010")) +
  guides(color = F) +
  theme(panel.grid.minor = element_blank(),
        text = element_text(size = 18),
        plot.title.position = "plot"
  )+ xlim(-4, 4) + ylim(-4, 4)
```
:::
:::

## Substantive Effect of X on Y {.smaller}

*Extreme values of correlation coefficient (i.e. close to -1 or 1) imply that there is a large substantive effect of* $X$ on $Y$

<!-- -   Conclusions about the Substantive Size of Effect Require Information about the Scales of the variables -->

::: columns
::: {.column width="50%"}
```{r}
#| echo: false
set.seed(1303)
x <- rpois(100, 5) 
x1 <- x / 100 
y <- x * 0.5 + rnorm(100, 0, 0.1) + 20
y1 <- y / 100 

ggplot(data = NULL, aes(x = x, y = y)) +
  geom_jitter(
    width = 0.1,
    height = 0.2,
    alpha = 0.5,
    size = 3
  ) +
  labs(x = "Cookies Eaten", y = "Happiness") +
  scale_x_continuous(breaks = scales::pretty_breaks(n = length(unique(x)))) +
    scale_y_continuous(breaks = scales::pretty_breaks()) +
  theme_minimal() +
  theme(panel.grid.minor = element_blank(),
        text = element_text(size = 20)
        )
```
:::

::: {.column width="50%"}
```{r}
cov(x, y)
cor(x, y)
cor(x, y/100) # change the scale of happiness index
lm(y ~ x) %>% coef()
lm(y/100 ~ x) %>% coef() # change the scale of happiness index
```
:::
:::

-   Slope coefficient value incorporates the information about (1) correlation and (2) relative scales of the variables
-   Strong correlation implies larger in magnitude slope coefficient
-   But does this mean that the effect is *substantively* large?

## Substantive Effect of X on Y {.smaller}

*Extreme values of correlation coefficient (i.e. close to -1 or 1) imply that there is a large substantive effect of* $X$ on $Y$

::: columns
::: {.column width="50%"}
```{r}
#| echo: false
ggplot(data = NULL, aes(x = x, y = y)) +
  geom_jitter(
    width = 0.1,
    height = 0.2,
    alpha = 0.5,
    size = 3
  ) +
  labs(x = "Cookies Eaten", y = "Happiness") +
  scale_x_continuous(breaks = scales::pretty_breaks(n = length(unique(x)))) +
    scale_y_continuous(breaks = scales::pretty_breaks()) +
  theme_minimal() +
  theme(panel.grid.minor = element_blank(),
                text = element_text(size = 20)
        ) +
  ylim(0, 50)
```
:::

::: {.column width="50%"}
To say that the effect is *substantively* large, we need substantive information about the scales of these variables:

-   what are the plausible values of $Y$ and $X$?
-   is a change of `r coef(lm(y ~x))[2] |> round(3)` in $Y$ a practically, substantively large one?
:::
:::

## Agenda for Today

<br>

**Paths and Backdoors: DAGs and Causal Identification**

<br>

**Lab: Drawing DAGs in [dagitty.net](dagitty.net) and `ggdag`**

# Causal Diagrams, Paths, and Backdoors

## Why Care About Causal Diagrams? {.smaller}

> DAGs represent the underlying data-generating process

-   help clarify study question and relevant concepts
-   provide common language to talk about theories and causal relationship (systematic way to talk about what is missing, like a node or a path)
-   make our assumptions about DGP explicit
-   help determine whether the effect of interest can be identified from available data
-   allow us to determine which variables we need to account for to be able to estimate the *causal* effect (isolate specific pathways)

## Steps to Causal Diagram

::: smaller
1.  Identify your treatment $X$ and outcome $Y$ variables
2.  List possible variables (*Nodes*) related to the relationship you try to identify, including the unobserved and unmeasurable ones
3.  For simplicity, combine them together or prune the ones least likely to be important
4.  Consider which variables are likely to affect which other variables and draw arrows from one to the other
5.  List all paths that connect $X$ to $Y$, regardless of the direction of arrows
6.  Identify any pathways that have arrows pointing backwards towards $X$
7.  Control for all nodes that point back to $X$ (aka *Close Backdoors*)
:::

## Paths Glossary {.smaller}

Frontdoor Path

:   A path where all the arrows point away from Treatment $X$

Backdoor Path

:   A path where at least one of the arrows points towards Treatment $X$

Open Path

:   A path in which there is variation in all variables along the path (and no variation in any colliders on that path)

Closed Path

:   A path in which there is at least one variable with no variation (or a collider with variation)

> Our goal: block all backdoor paths to identify the main pathway we care about

## Finding Paths

::: columns
::: {.column width="45%"}
```{dot}
//| echo: false
//| fig-width: 3
//| fig-height: 3
//| out-width: 100%
digraph D {
  node [shape=circle, fontname="AtkinsonHyperlegible-Regular"];
  edge [minlen = 1.2, arrowhead = vee, arrowsize=0.5];
  a [label = "X"];
  b [label = "Y"];
  c [label = "Z"];
  
  {rank=same a b};
  {rank=sink c};
  a->b;
  c->a;
  c->b;
}
```
:::

::: {.column width="55%"}
-   $X$ causes $Y$
-   $Z$ causes both $X$ and $Y$
-   $Z$ confounds the $XâŸ¶Y$ association
-   Paths between $X$ and $Y$:
    -   $XâŸ¶Y$
    -   $XâŸµZâŸ¶Y$
:::
:::

-   $Z$ is a backdoor path
-   Even if there was no $XâŸ¶Y$, $Z$ connects them

## Finding Paths: Campaign Money Example

::: columns
::: {.column width="50%"}
```{dot}
//| echo: false
//| fig-width: 4
//| fig-height: 3
digraph D {
  node [shape=oval, fontname="AtkinsonHyperlegible-Regular"];
  edge [minlen = 1.2, arrowhead = vee, arrowsize=0.5];
X [label = "Money\nRaised"];
Y [label = "Total\nVotes" ];
Z [label = "Candidate\nQuality"];
  {rank=same X Y};

X -> Y;
Z -> X;
Z -> Y;
}
```
:::

::: {.column width="50%"}
::: small
Paths between Money and Votes:

1.  Money âŸ¶ Total Votes
2.  Money âŸµ Candidate Quality âŸ¶ Total Votes
:::
:::
:::

::: smaller
-   Accounting for Quality closes the backdoor
-   In other words, we:
    -   compare candidates as if they had the same Quality
    -   remove differences that are predicted by Quality
    -   hold Quality constant
:::

## Finding Paths: A More Complex DAG

::: small
List all paths that connect *Money raised* with *Total Votes* (regardless of the direction of arrows). Which of them are backdoor paths?
:::

::: columns
::: {.column width="60%"}
```{dot}
//| echo: false
//| fig-width: 5
//| fig-height: 5
digraph D {
  node [shape=oval, fontname="AtkinsonHyperlegible-Regular"];
  edge [minlen = 1.2, arrowhead = vee, arrowsize=0.5];
  
"Candidate quality";
"Hire campaign manager" ;
"Money raised" ;
"Total votes" ;
"Won election" ;
"District" ;
"History" [style = "dashed"] ;
"Party";

{rank=same "Money raised" "Total votes"};
  
"Candidate quality" -> "Money raised";
"Candidate quality" -> "Total votes";
"Hire campaign manager" -> "Total votes";
"Money raised" -> "Hire campaign manager";
"Money raised" -> "Total votes" [minlen = 5];
"Money raised" -> "Won election";
"Total votes" -> "Won election";
"District" -> "Money raised";
"District" -> "Total votes";
"History" -> "District";
"History" -> "Party";
"Party" -> "Money raised";
"Party" -> "Total votes";
}


```
:::

::: {.column width="40%"}
```{r}
#| echo: false
countdown(minutes = 3, color_background = "white")
```

::: smallest
1.  Money âŸ¶ Total Votes
2.  Money âŸ¶ Hire campaign manager âŸ¶ Total Votes
3.  Money âŸ¶ Won Election âŸµTotal Votes
4.  Money âŸµ Candidate Quality âŸ¶ Total Votes
5.  Money âŸµ District âŸ¶ Total Votes
6.  Money âŸµ Party âŸ¶ Total Votes
7.  Money âŸµ District âŸµ History âŸ¶ Party âŸ¶ Total Votes
8.  Money âŸµ Party âŸµ History âŸ¶ District âŸ¶ Total Votes
:::
:::
:::

## Closing Backdoor Paths Is the Goal

::: columns
::: {.column width="60%"}
```{dot}
//| echo: false
//| fig-width: 5
//| fig-height: 5
digraph D {
  node [shape=oval, fontname="AtkinsonHyperlegible-Regular"];
  edge [minlen = 1.2, arrowhead = vee, arrowsize=0.5];
  
"Candidate quality" [shape = "box"];
"Hire campaign manager" ;
"Money raised" ;
"Total votes" ;
"Won election" ;
"District" [shape = "box"];
"History" [style = "dashed"] ;
"Party" [shape = "box"];

{rank=same "Money raised" "Total votes"};
  
"Candidate quality" -> "Money raised";
"Candidate quality" -> "Total votes";
"Hire campaign manager" -> "Total votes";
"Money raised" -> "Hire campaign manager";
"Money raised" -> "Total votes" [minlen = 5];
"Money raised" -> "Won election";
"Total votes" -> "Won election";
"District" -> "Money raised";
"District" -> "Total votes";
"History" -> "District";
"History" -> "Party";
"Party" -> "Money raised";
"Party" -> "Total votes";
}


```
:::

::: {.column width="40%"}
```{r}
#| echo: false
countdown(minutes = 3, color_background = "white")
```

::: smallest
Frontdoor Paths:

1.  Money âŸ¶ Total Votes
2.  Money âŸ¶ Hire campaign manager âŸ¶ Total Votes

Closed Backdoor Path:

3.  Money âŸ¶ Won Election âŸµTotal Votes

Open Backdoor Paths:

::: {.red style="color: #800010;"}
4.  Money âŸµ Candidate Quality âŸ¶ Total Votes
5.  Money âŸµ District âŸ¶ Total Votes
6.  Money âŸµ Party âŸ¶ Total Votes
7.  Money âŸµ District âŸµ History âŸ¶ Party âŸ¶ Total Votes
8.  Money âŸµ Party âŸµ History âŸ¶ District âŸ¶ Total Votes
:::
:::
:::

::: smallest
-   Adjusting for Quality, District, and Party *closes* open backdoors. âŸ¶ Yes!\
-   Unobserved History then also does not confound Money and Votes.\
-   Adjusting for Won Election *opens* a backdoor âŸ¶ No!
:::
:::

## Experiments Close Backdoors

::: columns
::: {.column width="50%"}
### Observational Study

```{dot}
//| echo: false
//| fig-width: 5
//| fig-height: 5
digraph D {
  node [shape=oval, fontname="AtkinsonHyperlegible-Regular"];
  edge [minlen = 1.2, arrowhead = vee, arrowsize=0.5];
  
"Candidate quality" [shape = "box"];
"Hire campaign manager" ;
"Money raised" ;
"Total votes" ;
"Won election" ;
"District" [shape = "box"];
"History" [style = "dashed"] ;
"Party" [shape = "box"];

{rank=same "Money raised" "Total votes"};
  
"Candidate quality" -> "Money raised";
"Candidate quality" -> "Total votes";
"Hire campaign manager" -> "Total votes";
"Money raised" -> "Hire campaign manager";
"Money raised" -> "Total votes" [minlen = 5];
"Money raised" -> "Won election";
"Total votes" -> "Won election";
"District" -> "Money raised";
"District" -> "Total votes";
"History" -> "District";
"History" -> "Party";
"Party" -> "Money raised";
"Party" -> "Total votes";
}


```
:::

::: {.column width="50%"}
### Experimental Study

```{dot}
//| echo: false
//| fig-width: 5
//| fig-height: 5
digraph D {
  node [shape=oval, fontname="AtkinsonHyperlegible-Regular"];
  edge [minlen = 1.2, arrowhead = vee, arrowsize=0.5];
  
"Candidate quality" [shape = "box"];
"Hire campaign manager" ;
"Money raised" ;
"Total votes" ;
"Won election" ;
"District" [shape = "box"];
"History" [style = "dashed"] ;
"Party" [shape = "box"];

{rank=same "Money raised" "Total votes"};
  
"Candidate quality" -> "Total votes";
"Hire campaign manager" -> "Total votes";
"Money raised" -> "Hire campaign manager";
"Money raised" -> "Total votes" [minlen = 5];
"Money raised" -> "Won election";
"Total votes" -> "Won election";
"District" -> "Total votes";
"History" -> "District";
"History" -> "Party";
"Party" -> "Total votes";
}


```
:::
:::

## Backdoor Criterion Comes from $do$-calculus

::: smaller 

- If we apply a set of logical rules called $do$-calculus, we can strip away confounding relationships and isolate effect of interest in observational data 
- $do()$ operator represents a direct intervention in a DAG and means setting a Node to a particular value (e.g., Money Raised = \$10'000), like as if we were doing an experiment 
- Estimating $E[\text{Total Votes} | do(\text{Money raised})]$ is impossible though, we can only estimate $E[\text{Total Votes} | \text{Money raised}]$, but $E[\text{Total Votes} | do(\text{Money raised})] \neq E[\text{Total Votes} | \text{Money raised}]$ 
- Applying the rules of $do-$calculus allows us to remove $do()$ and make the causal effect identifiable (i.e. isolated)

<!-- ![](https://evalf22.classes.andrewheiss.com/slides/img/05/do-calculus.png){fig-align="center" width="349"} -->

*If you can transform* $do()$ expressions to $do$-free versions, you can legally make causal inferences from observational data
:::

<!-- ```{dot} -->

<!-- //| echo: false -->

<!-- //| fig-width: 5 -->

<!-- //| fig-height: 5 -->

<!-- digraph D { -->

<!--   node [shape=oval, fontname="AtkinsonHyperlegible-Regular"]; -->

<!--   edge [minlen = 1.2, arrowhead = vee, arrowsize=0.5]; -->

<!-- "Winning Office"; -->

<!-- "Life Expectancy" ; -->

<!-- "Health" ; -->

<!-- "Attractiveness" ; -->

<!-- "Prior Economic Resources" ; -->

<!-- "Stress"; -->

<!-- "Long Working Hours" ; -->

<!-- "Sleep Deprivation"; -->

<!-- "Status"; -->

<!-- "Beneficial connections"; -->

<!-- "Monetary Benefits"; -->

<!-- {rank=same "Money raised" "Total votes"}; -->

<!-- "Candidate quality" -> "Money raised"; -->

<!-- "Candidate quality" -> "Total votes"; -->

<!-- "Hire campaign manager" -> "Total votes"; -->

<!-- "Money raised" -> "Hire campaign manager"; -->

<!-- "Money raised" -> "Total votes" [minlen = 5]; -->

<!-- "Money raised" -> "Won election"; -->

<!-- "Total votes" -> "Won election"; -->

<!-- "District" -> "Money raised"; -->

<!-- "District" -> "Total votes"; -->

<!-- "History" -> "District"; -->

<!-- "History" -> "Party"; -->

<!-- "Party" -> "Money raised"; -->

<!-- "Party" -> "Total votes"; -->

<!-- } -->

<!-- ``` -->

## Main Take Aways

-   Causal diagrams sketch the DGP and allow us to see if the effect of interest is identifiable, i.e. that we can isolate the path(s) that refer to our effect
-   There will often be more than one single appropriate DAG
-   Backdoor paths create systematic, noncausal correlations between the causal variable of interest and the outcome you are trying to study, and we need to close them
-  If you assume your DAG is right and you closed all backdoors, you can legally make causal inferences from observational data

<!-- ## Wine and Lifespan -->

<!-- RQ: How does drinking wine affect your lifespan? -->

<!-- ```{dot} -->
<!-- //| echo: false -->
<!-- //| fig-width: 4 -->
<!-- //| fig-height: 3 -->
<!-- digraph D { -->
<!--   node [shape=oval, fontname="AtkinsonHyperlegible-Regular"]; -->
<!--   edge [minlen = 1.2, arrowhead = vee, arrowsize=0.5]; -->
<!-- Office [label = "Winning\nOffice"]; -->
<!-- Lifespan; -->
<!-- Income; -->
<!-- Drugs; -->
<!-- Health; -->
<!-- U; -->
<!--   {rank=same Office Lifespan}; -->
<!--   {rank=same Income Health}; -->

<!-- Wine -> Lifespan; -->
<!-- Income -> Wine; -->
<!-- Income -> Lifespan; -->
<!-- Health -> Wine; -->
<!-- Health -> Lifespan; -->

<!-- } -->
<!-- ``` -->

<!-- ## Code -->

<!-- dag { bb="-10.472,-11.235,11.274,11.561" "Beneficial connections" \[pos="2.366,9.661"\] "Life Expectancy" \[pos="-8.660,-3.067"\] "Long Working Hours" \[pos="6.194,-1.964"\] "Monetary Benefits" \[pos="9.462,4.016"\] "Prior Economic Resources" \[pos="3.128,-7.127"\] "Sleep Deprivation" \[pos="-2.194,5.770"\] "Winning Office" \[pos="-4.807,-9.335"\] Attractiveness \[pos="-6.138,2.373"\] Health \[pos="-2.714,-3.922"\] Status \[pos="3.459,3.758"\] Stress \[pos="-0.054,-0.334"\] -->

<!-- } -->

<!-- ## Campaign Example -->

<!-- List all paths that connect *Money* raised with *Total Votes*: -->

<!-- Paths between $Money$ and $Margin$: -->

<!-- ```{r} -->

<!-- ggdag::dag('dag { -->

<!-- bb="0,0,1,1" -->

<!-- "Candidate quality" [pos="0.371,0.259"] -->

<!-- "Hire campaign manager" [pos="0.630,0.681"] -->

<!-- "Money raised" [exposure,pos="0.202,0.516"] -->

<!-- "Total votes" [outcome,pos="0.702,0.501"] -->

<!-- "Won election" [pos="0.360,0.685"] -->

<!-- District [pos="0.569,0.262"] -->

<!-- History [latent,pos="0.654,0.100"] -->

<!-- Party [pos="0.477,0.092"] -->

<!-- "Candidate quality" -> "Money raised" -->

<!-- "Candidate quality" -> "Total votes" -->

<!-- "Hire campaign manager" -> "Total votes" -->

<!-- "Money raised" -> "Hire campaign manager" -->

<!-- "Money raised" -> "Total votes" -->

<!-- "Money raised" -> "Won election" -->

<!-- "Total votes" -> "Won election" -->

<!-- District -> "Money raised" -->

<!-- District -> "Total votes" -->

<!-- History -> District -->

<!-- History -> Party -->

<!-- Party -> "Money raised" -->

<!-- Party -> "Total votes" -->

<!-- }' -->

<!-- ) %>% -->

<!--   paths() -->

<!-- ``` -->

<!-- ## Lab: -->

<!-- 1.  Transfer your theory into a DAG using dagitty.net (nice interface for creating the model code) -->

<!-- 2.  Transferring DAG to ggdag; identifying paths and adjustment sets (i.e. covariates) -->

<!-- 3.   -->

<!-- ## Problem Set -->

<!-- > Read an artice: Identifying Judicial Empathy: Does Having Daughters Cause Judges to Rule for Women's Issues? (focus on the theory part) -->

<!-- 1.  Draw a DAG based on the described data-generation process -->

<!-- 2.  Do the authors include all the variables they need in order to identify the effect of having daughters on feminist voting? -->

<!-- 3.  Are the cases assigned randomly? If judges could select the cases, how could you depict the implications from this fact in a DAG? -->

<!-- 4.  Can you think of a mediator variable? Add it to the DAg and justify your selection. -->

<!-- 5.   -->
