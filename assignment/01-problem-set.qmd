---
title: "Problem Set 1"
subtitle: "Total points: 20"
date: "2023-02-20"
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(fig.align = "center")
```



This homework helps you with establishing the workflow with GitHub and Rstudio, as well as guides you through the first steps in working with Quarto documents and writing code with `R`. The guideline is rather detailed, but should you have any further questions or issues, do not hesitate to ask for help at the [Discussion forum](https://github.com/orgs/r4da-s23/discussions) or during the [office hours](https://calendly.com/vktrsmnv). 

## Task 1: Install the software (3 points)

If you haven't done so, please install the software following the guidelines [on this page](resources/install.html). Do this as soon as you have the chance, ideally before Friday so you can come to the office hours if you need help. 


## Task 2: Load your first homework repo (2 points)

You will be working on homework assignments in *private* repositories, which means only you and I have access to the files. Each homework repo will include your GitHub login in the title. You should be able to load this repo into your local machine, make changes to the files there, and have access to uploading things back to GitHub (aka you will be able to "push") so I can see and grade them.


#### Get the URL of the repo for homework assignment

Go to the page of our [course organization on GitHub](https://github.com/orgs/r4da-s23) and open the repository `01_problem_set_[username]`. This repo contains all the relevant materials for your first homework assignment. 

Click on the green Code button and copy the HTTPS link for the repo by clicking on the clipboard icon. 

![](../files/img/assignments/github-code-url.png)
<!-- To work on the assignment, you have open the repository as a new project in RStudio on your computer.  -->

#### Import the repository in RStudio

1. Open RStudio and select `File` > `New Project` > `Version Control` > `Git`. 

```{r echo=FALSE, out.width = "100%", fig.align = "center"}
knitr::include_graphics("../files/img/assignments/new-project.png")
```


2. In the final window, paste the repo URL you grabbed from GitHub in the `Repository URL` window. 
Click on `Browse` to select the folder on your computer where you want to store the project. I suggest you set up a folder on your computer for all the class content and always use this as a destination to store your material for the course. 

Sometimes RStudio (and other programs as wel) has troubles with paths that contain spaces or special characters, like umlauts (e.g., Ãœ). To avoid these problems, **make sure your path to the project folder does not contain special characters and/or spaces**.[^naming] You can replace spaces in a filenames and folders with dashes (-) or underscores (_) or remove them completely. Also, better avoid periods (.) in files'/folders' names: periods should be saved for extension only. 

[^naming]: For some general advice on file/folder naming, have a look [here](https://blog.josephscott.org/2007/02/12/things-that-shouldnt-be-in-file-names-for-1000-alex/). 

3. Click on `Create Project`. 

If everything worked fine, you should now have a subfolder `01_problem_set_[username]` in the folder our selected when downloading (aka "cloning") the project. 


## Task 3: Practice committing to the repo (2 points)

Before we move to `R`, let's try uploading files into GitHub. The process here requires two steps: first, you need to, figuratively, take a snapshot of your project looks like at the moment. This is what a `commit` command will do. And after that, you will need to upload your changes to GitHub (otherwise, they just stay on your local machine). This is done with the help of `push` command. 

#### Make some changes 

Your first commit will be adding the dataset into the repo: 

- Create a subfolder named `data` in the project folder you just made. 
- Download this `csv` file and place it in that folder:

    - [{{< fa file-csv >}} `un_votes.csv`](/files/data/external_data/un_votes.csv)
    
    
Now you are ready to make your first commit! Here are the steps you need to follow: 

#### Upload the assignment to GitHub

1. Switch to `Git` pane from the `Environment` pane in the upper right. If nothing appears in the *Git* pane in RStudio, click on Refresh button. 

2. Check all boxes that appear in the upper left pane next to files. By doing so, you are telling `git` *which* files you want to take a snapshot of (it doesn't always have to be all files you made changes to). In `git` lingo, this means moving the files into Staging Area. 

3. Click on `Commit` to open the dialog window. 


```{r echo=FALSE, out.width = "100%", fig.align = "center"}
knitr::include_graphics("../files/img/assignments/commit-select-files.png")
```


4. Write a _Commit Message_ in the window. **For this task, please use _"Added data folder and dataset"_ as your commit message**. Usually, this should describe the work you did since your last commit so that at a later point in time, you can easily keep track of your process. 

5. Click on `Commit`. By doing so, you are telling `git` to take a snapshot of the files you selected.  


```{r echo=FALSE, out.width = "50%", fig.align = "center"}
knitr::include_graphics("../files/img/assignments/commit-add-message.png")
```


6. If everything worked fine, you should see something similar in a dialog window. This means that you have successfully saved your work and the "snapshot" _on your computer_.  

```{r echo=FALSE, out.width = "50%", fig.align = "center"}
knitr::include_graphics("../files/img/assignments/commit-success.png")
```


7. You can now see that there are commits that have not been uploaded to GitHub thanks to the message on the left: *Your branch is ahead of 'origin/main' by 1 commit.* Click on `Push` to upload the latest "snapshot" version to GitHub. 

  
```{r echo=FALSE, out.width = "50%", fig.align = "center"}
knitr::include_graphics("../files/img/assignments/commit-push.png")
```


8. If everything goes well, you will something resembling this message in a dialog window. You've done with the first commit `r emoji::emoji("tada")`

  
```{r echo=FALSE, out.width = "50%", fig.align = "center"}
knitr::include_graphics("../files/img/assignments/commit-push-success.png")
```

  
Now you can go to the repository on GitHub and check whether it is updated to the most current version of your assignment.

In a few minutes after you pushed, if you have done everything right, you will see the badge "Data folder commit" in the `README.md` (aka description) part in your repository turning green.


## Task 4: Try working with Quarto document (11 points)


Now let's move to the fun part--working in Quarto and writing the `R` code. 

Open the file `problem_set.qmd`. This is the file that allows you to both write the code and the text, so you can produce well-formatted reports. Complete the tasks written in the file. You do not *have to* commit/push the work in progress, but you are more then welcome to! 

Note: click on *Save* to see the changed files in the `git` pane. 


## Task 5: Commit and push the final result version to GitHub (2 points)

You're almost done with the first homework! Now all that's left is uploading the task back to GitHub. Essentially, you need to repeat the steps from before:


1. Switch to `Git` pane from the `Environment` pane in the upper right.

2. Check all boxes that appear in the upper left pane. By doing so, you are telling `git` *which* files you want to take a snapshot of (it doesn't always have to be all files you made changes to). 

3. Click on `Commit` to open the dialog window. 

4. Write a _Commit Message_. **For this task, please use _"Final version"_ as your commit message**. 
5. Click on `Commit`. By doing so, you are telling `git` to take a snapshot of the files you selected.  

6. If everything worked fine, you should see something similar in a dialog window. This means that you have successfully svaed your work _on your computer_.  

7. You can now see that there are commits that have not been uploaded to GitHub thanks to the message on the left. Click on `Push` in order to push the latest saved version to GitHub. 
  
8. If everything goes well, you will something resembling this message in a dialog window. 

Congrats! You are done with the first homework assignment!  `r emoji::emoji("tada")`




