---
title: "Problem Set 2"
subtitle: "Total points: 20"
date: "2023-02-27"
# draft: true 
---


```{r setup, include=FALSE}
knitr::opts_chunk$set(fig.align = "center")
library(ggplot2)
```


This homework is focused on visualization of univariate distributions and comparisons with `ggplot2` package as well as critical thinking about design choices when plotting. Should you have any further questions or issues, do not hesitate to ask for help at the [Discussion forum](https://github.com/orgs/r4da-s23/discussions) or during the [office hours](https://calendly.com/vktrsmnv). 

## Load your homework repo 

#### Get the URL of the repo for homework assignment

Go to the page of our [course organization on GitHub](https://github.com/orgs/r4da-s23) and open the repository `PS02_[username]`. This repo contains all the relevant materials for your homework assignment. 

Click on the green Code button and copy the HTTPS link for the repo by clicking on the clipboard icon. 

![](../files/img/assignments/github-code-url.png)

#### Import the repository in RStudio

1. Open RStudio and select `File` > `New Project` > `Version Control` > `Git`. 

```{r echo=FALSE, out.width = "100%", fig.align = "center"}
knitr::include_graphics("../files/img/assignments/new-project.png")
trains <- readr::read_csv("../files/data/external_data/trains.csv")
```


2. In the final window, paste the repo URL you grabbed from GitHub in the `Repository URL` window. 
Click on `Browse` to select the folder on your computer where you want to store the project. I suggest you set up a folder on your computer for all the class content and always use this as a destination to store your material for the course. 

3. Click on `Create Project`. 

If everything worked fine, you should now have a subfolder `PS02_[username]` in the folder our selected when downloading (aka "cloning") the project. 

> Note: the `qmd` will not render (it will produce an error in the process) until you have add the dataset

## Background on the Data

A professor in the Government department at Harvard, Ryan Enos, conducted a randomized field experiment assessing the extent to which individuals living in suburban communities around Boston, Massachusetts, and their views were affected by exposure to demographic change.

> Enos, R. D. 2014. ["Causal Effect of Intergroup Contact on Exclusionary Attitudes."](http://dx.doi.org/10.1073/pnas.1317670111) *Proceedings of the National Academy of Sciences* 111(10): 3699--3704.

Subjects in the experiment were individuals riding on the commuter rail line and overwhelmingly white. Every morning, multiple trains pass through various stations in suburban communities that were used for this study. For pairs of trains leaving the same station at roughly the same time, one was randomly assigned to receive the treatment and one was designated as a control. By doing so all the benefits of randomization apply for this dataset.

The treatment in this experiment was the presence of two native Spanish-speaking 'confederates' (a term used in experiments to indicate that these individuals worked for the researcher, unbeknownst to the subjects) on the platform each morning prior to the train's arrival. The presence of these confederates, who would appear as Hispanic foreigners to the subjects, was intended to simulate the kind of demographic change anticipated for the United States in coming years. For those individuals in the control group, no such confederates were present on the platform. The treatment was administered for 10 days. Participants were asked questions related to immigration policy both before the experiment started and after the experiment had ended. You will be working withe the dataset with these variables (names may differ slightly):

| Variable         | Description                                                                                                            |
|---------------|----------------------------------------------------------|
| `treatment`      | variable with two levels: "Treated" and "Control"                                                                      |
| `att_start`      | starting attitude toward immigration issues. Uses a 3 to 15 scale, with higher numbers meaning more conservative       |
| `att_end`        | ending attitude toward immigration issues. Uses a 3 to 15 scale, with higher numbers meaning more conservative         |
| `gender`         | variable with values "Male" and "Female"                                                                               |
| `race`           | variable with values "Asian", "Black", "Hispanic", and "White"                                                         |
| `liberal`        | logical variable with TRUE meaning liberal                                                                             |
| `party`          | variable with values "Democrat" and "Republican"                                                                       |
| `age`            | age in years                                                                                                           |
| `income`         | family income in dollars                                                                                               |
| `line`           | commuter train line, with values "Framingham" and "Franklin"                                                           |
| `station`        | train station                                                                                                          |
| `hisp_perc`      | percentage of Hispanic residents in person's zip code                                                                  |
| `ideology_start` | measure of political ideology, before the experiment, on a 1 to 5 scale, with higher numbers meaning more conservative |
| `ideology_end`   | measure of political ideology, after the experiment, on a 1 to 5 scale, with higher numbers meaning more conservative  |


## Task 0: Update the Name in YAML

## Task 1: Loading the Data (1 point)

Please load the dataset `trains.tsv` from the data folder using the `readr` package and function `read_tsv`. Make sure the variable names are nice-to-work-with (`janitor` package can come in handy).

## Task 2: Overview of the Dataset  (3 points)

Describe the dataset. Please answer the following questions in text and with the code where it is needed. I provide you with some template code that can help in answering one of the questions in the chunk below.

-   How many variables are there?
-   How many observations exist?
-   How many of the observations belong to *Treatment* and how many to *Control* condition?
-   What are the types of variables (conceptually, not inside `R`)? Recall the plot from the slides.

## Task 3: Plots for Continuous Discrete Variables  (5 points)

### 3.1: Make the plots

Create two plots for the distribution of immigration attitudes *before* the experiment. For the first plot, use `geom_histogram()`. For the second plot, use `geom_bar` or make a lollipop plot (see the lab for the code example).

Put the code for the plots into the chunks with respective labels. Don't forget to make the plots reader-friendly!

> Hint: you are welcome to play around with themes argument. Check the examples here: https://ggplot2.tidyverse.org/reference/ggtheme.html

### 3.2: Discuss the plots

Out of these two, which of the `geom`s do you think works better for presenting a discrete variable? Why do you think so?

## Task 4: Recreating a Plot with Layered `geom`s  (7 points)

When looking at the data from the experiments, we often want to compare the characteristics of the respondents across groups. We should have have very similar groups, on average, to ba able to make valid inferences from the experiment. In this case, we would like to know if prior attitudes to immigration differ between (1) those who got assigned to the treatment condition and (2) those who were assigned to the control condition. Below you see a plot that could allow for such a comparison.

```{r echo=FALSE, out.width = "100%", fig.align = "center"}
knitr::include_graphics("../files/img/assignments/prior_attitudes_balance.png")
```

### 4.1: Recreate this plot

> Hint: order of layers makes a difference: layers may override the preceeding ones. 
> Hint: you can use `geom_jitter` for the points. 
> Hint: you may not get the points at *exactly* the same places, and that's okay.

### 4.2: Discuss the plot

What is your conclusion regarding the "balance" of the groups: do we seem to have, on average, similar prior immigration attitudes across groups?

### 4.3: Discuss the design of the plot

Discuss design choices behind the plot:

-   What do you think is the purpose of adding each `geom` layer?
-   Can either of them be omitted without loosing information?
-   Is there any more information about the distributions of prior immigration attitudes conditional on the treatment status you would like to have?
-   Is it helpful in this case to remove the values on the horizontal axis? Why (not)?

### 4.4: Make an alternative (optional)

Can you think of an alternative way to convey the same information graphically (e.g., using different `geom`s)? Or any adjustments to the current version of the plot? Make that plot!


### 4.5: Make a plot for another variable

Now compare the immigration attitudes *after* the experiment across treatment and control groups with the same plot. Based on this plot alone, what can you conclude about the effect of the treatment?


## Task 5: Visualize Categorical Variables  (3 points)

Below you can find the code to create (very basic) barplots for the *race* variable. As with immigration attitudes, we want to know if we had similar distributions for races across treatment conditions.

```{r}
#| layout-ncol: 2
#| layout-nrow: 3
#| echo: false

# store the objects for two different mappings
race_plot <- ggplot(trains, aes(
  x = race,
  fill = treatment
)) 

treat_plot <- ggplot(trains, aes(
  x = treatment,
  fill = race
))

# add geoms 
race_plot +
  geom_bar()

treat_plot +
  geom_bar()

race_plot +
  geom_bar(position = "dodge")

treat_plot +
  geom_bar(position = "dodge")

race_plot +
  geom_bar(position = "fill")

treat_plot +
  geom_bar(position = "fill")
```

### 5.1: Discuss the plots

Which of these plots (if any) do you think makes a better job at allowing for the comparison of the distributions across treatment groups? Why?

### 5.2: Improve the plots

Select the plot(s) that you think are the most useful for our purpose. Improve that plot to make it more reader-friendly.


### 5.3: Store your plot

Save the plot from 5.2 into the environment.

## Task 6: Store the plot object (1 point)

### 6.1. Save the image

Sometimes you will need to export the plot from RStudio. Save your last plot in the folder *figures*. Choose a meaningful name for the file.

> Tip: We usually store plots in `pdf` or `png` formats, not `jpeg`. `jpeg` compresses the quality of the image.

### 6.2. Save the plot object

Another times we just want to store a `ggplot` object so we can work on it later on. Save you `ggplot` object into an `rds` file in the *output* folder. You can use the `write_rds` command from `readr`. Adjust the lines in the chunk below to do the job:

## Task 7: Final Steps

-   Style your code with `styler` addin.
-   Render the final (!) version of your document into PDF.
-   Commit and push the latest version of your file to GitHub.
