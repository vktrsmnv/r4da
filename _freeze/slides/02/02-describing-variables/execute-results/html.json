{
  "hash": "73b93b00449c913bbca6aca6e4510ae4",
  "result": {
    "markdown": "---\ntitle: \"Describing Variables\"\nsubtitle: \"Data Analytics and Visualization with R<br>Session 2\"\ntitle-slide-attributes:\n  data-background-size: stretch\n  data-slide-number: none\nauto-stretch: false\ninstitute: \"University of Mannheim<br>Spring 2023\"\nauthor: \"Viktoriia Semenova\"\nfooter: \"[ðŸ”— r4da.live](https://r4da.live/)\"\nlogo: images/logo.png\nformat:\n  revealjs:\n    theme: ../slides.scss\n    transition: fade\n    incremental: true   \n    slide-number: true\n    chalkboard: true\neditor: visual\nexecute:\n  echo: true\n---\n\n\n\n\n# Warm up\n\n## Announcements\n\n::: incremental\n-   Our Slack workspace: [r4da.slack.com](r4da.slack.com)\n    -   `#github_lab_updates`: notifies you on push to lab repos\n    -   `#github_discussions_updates`: notifies you on new posts in Discussions\n    -   you can create private channels for teamwork\n\n\n:::\n\n## Naming Conventions\n\n-   Avoid spaces and special characters (e.g., umlauts) in folder/file names. Use:\n    -   `snake_case`\n    -   `camelCase`\n    -   `PascalCase`\n-   Same applies to creating variables in `R`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# good \nun_votes$percent_yes\n\n# bad\nun_votes$`percent yes`\n```\n:::\n\n\n## `tidyverse` package is a shortcut\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"tidyverse\")\n```\n:::\n\n\n    install.packages(\"ggplot2\")\n    install.packages(\"dplyr\")\n    install.packages(\"tidyr\")\n    install.packages(\"readr\")\n    install.packages(\"purrr\")\n    install.packages(\"tibble\")\n    install.packages(\"stringr\")\n    install.packages(\"forcats\")\n    install.packages(\"lubridate\")\n    install.packages(\"hms\")\n    install.packages(\"DBI\")\n    install.packages(\"haven\")\n    install.packages(\"httr\")\n    install.packages(\"jsonlite\")\n    install.packages(\"readxl\")\n    install.packages(\"rvest\")\n    install.packages(\"xml2\")\n    install.packages(\"modelr\")\n    install.packages(\"broom\")\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"tidyverse\")\n```\n:::\n\n\n    library(\"ggplot2\")\n    library(\"dplyr\")\n    library(\"tidyr\")\n    library(\"readr\")\n    library(\"purrr\")\n    library(\"tibble\")\n    library(\"stringr\")\n    library(\"forcats\")\n:::\n:::\n\n<!-- ```{=html} -->\n\n<!-- <iframe src=\"https://app.sli.do/event/adq3BNjH86taZN3zc38iXV/embed/polls/5064438a-953b-4fdb-bc5c-c7b72fa1addf\" width=\"1000\" height=\"400\"></iframe> -->\n\n<!-- ``` -->\n\n## Installing and loading new packages\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# put all packages we use in a vector\np_needed <- c(\"tidyverse\", \"scico\") \n\n# check if they are already installed, install if not installed \nlapply(p_needed[!(p_needed %in% rownames(installed.packages()))], install.packages)\n\n# load the packages\nlapply(p_needed, library, character.only = TRUE)\n```\n:::\n\n\n## Loading Dataset\n\n-   Use relative paths in `qmd` files\n-   Use `Tab` for auto-complete when writing paths\n-   Always put *all* the code lines in the `qmd` file\n-   If you use *Import Dataset* tool in Rstudio:\n    -   Load the dataset\n    -   Copy the path absolute path from *Console*\n    -   Shorten the absolute path to a relative one and paste into `qmd` file\n-   Do **not** leave full datasets printed out it chunks\n\n## Information about Dataset\n\nHow many and what columns does it contain? How many observations are there? \n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(un_votes)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 59,284\nColumns: 5\n$ country     <chr> \"Afghanistan\", \"Afghanistan\", \"Afghanistan\", \"Afghanistan\"â€¦\n$ year        <dbl> 1946, 1946, 1946, 1947, 1947, 1947, 1948, 1948, 1948, 1948â€¦\n$ issue       <chr> \"Colonialism\", \"Economic development\", \"Human rights\", \"Coâ€¦\n$ votes       <dbl> 5, 6, 1, 8, 2, 7, 12, 9, 8, 6, 11, 3, 14, 3, 5, 6, 14, 3, â€¦\n$ percent_yes <dbl> 0.80000000, 0.66666667, 1.00000000, 0.50000000, 0.50000000â€¦\n```\n:::\n:::\n\n\n. . .\n\nHow **many** unique countries are there in the dataset?\n\n\n::: {.cell}\n\n```{.r .cell-code}\nun_votes$country %>% unique() %>% length()\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 200\n```\n:::\n:::\n\n\n## GitHub\n\n::: incremental\n-   GitHub commit messages are *primarily* for you, not for me\n-   File status: ![](https://intro2r.com/images/rstudio_git_cols.png)\n-   What's coming later on:\n    -   use `git` & GitHub to collaborate (aka deal with merge conflicts)\n    -   travel in time (go between versions of the project)\n    -   create and populate R project and repos on your own\n:::\n\n## Your GitHub Stats ðŸ¤“\n\n::: columns\n::: {.column width=\"50%\"}\n![](images/PS01_by_hour.png)\n:::\n\n::: {.column width=\"50%\"}\n![](images/PS01_by_wday.png)\n:::\n:::\n\n## Using pipes `%>%` or `|>`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nleave_house(\n  get_dressed(\n    get_out_of_bed(wake_up(me, time = \"8:00\"),\n                   side = \"correct\"),\n    pants = TRUE,\n    shirt = TRUE\n  ),\n  foot = TRUE,\n  bike = FALSE\n)\n```\n:::\n\n\n. . .\n\nWith pipes:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nme %>%\n  wake_up(time = \"7:00\") %>%\n  get_out_of_bed(side = \"correct\") %>%\n  get_dressed(pants = TRUE, shirt = TRUE) %>%\n  leave_house(foot = TRUE, bike = FALSE)\n```\n:::\n\n\n# Describing Variables\n\n## Types of Data in Political Science\n\n\n- **Cross-section:** a snapshot of a sample of units (e.g., people, countries, governments) at one point of time \n\n- **Time series:** observations on variables over time \n\n- **Pooled time series cross-section:** comparable time series data observed on variety of units (e.g., people, countries, governments)\n  - Usually few cases, but long time series \n\n- **Panel data:** large number of the same cross-sectional units (e.g., survey respondents) observed repeatedly \n  - Usually many cases, but shorter time series \n\n------------------------------------------------------------------------\n\n## ![](https://openintro-ims.netlify.app/01-data-hello_files/figure-html/variables-1.png)\n\n\n## Types of Variables \n\n- **Numerical (quantitative):** take on values sensible to add, subtract, take averages, etc. with these values \n  + *Continuous:* take on any of an infinite number of values within a given range (e.g., vote share) \n  <svg viewBox=\"0 0 581 512\" style=\"height:1em;position:relative;display:inline-block;top:.1em;\" xmlns=\"http://www.w3.org/2000/svg\">  <path d=\"M581 226.6C581 119.1 450.9 32 290.5 32S0 119.1 0 226.6C0 322.4 103.3 402 239.4 418.1V480h99.1v-61.5c24.3-2.7 47.6-7.4 69.4-13.9L448 480h112l-67.4-113.7c54.5-35.4 88.4-84.9 88.4-139.7zm-466.8 14.5c0-73.5 98.9-133 220.8-133s211.9 40.7 211.9 133c0 50.1-26.5 85-70.3 106.4-2.4-1.6-4.7-2.9-6.4-3.7-10.2-5.2-27.8-10.5-27.8-10.5s86.6-6.4 86.6-92.7-90.6-87.9-90.6-87.9h-199V361c-74.1-21.5-125.2-67.1-125.2-119.9zm225.1 38.3v-55.6c57.8 0 87.8-6.8 87.8 27.3 0 36.5-38.2 28.3-87.8 28.3zm-.9 72.5H365c10.8 0 18.9 11.7 24 19.2-16.1 1.9-33 2.8-50.6 2.9v-22.1z\"></path></svg> `numeric`\n  + *Discrete:* take on one of a specific set of numeric values (e.g., number of human fatalities in conflict) \n    <svg viewBox=\"0 0 581 512\" style=\"height:1em;position:relative;display:inline-block;top:.1em;\" xmlns=\"http://www.w3.org/2000/svg\">  <path d=\"M581 226.6C581 119.1 450.9 32 290.5 32S0 119.1 0 226.6C0 322.4 103.3 402 239.4 418.1V480h99.1v-61.5c24.3-2.7 47.6-7.4 69.4-13.9L448 480h112l-67.4-113.7c54.5-35.4 88.4-84.9 88.4-139.7zm-466.8 14.5c0-73.5 98.9-133 220.8-133s211.9 40.7 211.9 133c0 50.1-26.5 85-70.3 106.4-2.4-1.6-4.7-2.9-6.4-3.7-10.2-5.2-27.8-10.5-27.8-10.5s86.6-6.4 86.6-92.7-90.6-87.9-90.6-87.9h-199V361c-74.1-21.5-125.2-67.1-125.2-119.9zm225.1 38.3v-55.6c57.8 0 87.8-6.8 87.8 27.3 0 36.5-38.2 28.3-87.8 28.3zm-.9 72.5H365c10.8 0 18.9 11.7 24 19.2-16.1 1.9-33 2.8-50.6 2.9v-22.1z\"></path></svg> `integer`\n\n- **Categorical (qualitative):** take on a limited number of distinct categories categories can be identified with numbers, but not sensible to do arithmetic operations\n<svg viewBox=\"0 0 581 512\" style=\"height:1em;position:relative;display:inline-block;top:.1em;\" xmlns=\"http://www.w3.org/2000/svg\">  <path d=\"M581 226.6C581 119.1 450.9 32 290.5 32S0 119.1 0 226.6C0 322.4 103.3 402 239.4 418.1V480h99.1v-61.5c24.3-2.7 47.6-7.4 69.4-13.9L448 480h112l-67.4-113.7c54.5-35.4 88.4-84.9 88.4-139.7zm-466.8 14.5c0-73.5 98.9-133 220.8-133s211.9 40.7 211.9 133c0 50.1-26.5 85-70.3 106.4-2.4-1.6-4.7-2.9-6.4-3.7-10.2-5.2-27.8-10.5-27.8-10.5s86.6-6.4 86.6-92.7-90.6-87.9-90.6-87.9h-199V361c-74.1-21.5-125.2-67.1-125.2-119.9zm225.1 38.3v-55.6c57.8 0 87.8-6.8 87.8 27.3 0 36.5-38.2 28.3-87.8 28.3zm-.9 72.5H365c10.8 0 18.9 11.7 24 19.2-16.1 1.9-33 2.8-50.6 2.9v-22.1z\"></path></svg> `character` or `factor`\n  + *Ordinal:* levels have an inherent ordering (e.g., Likert scales) \n  + *Nominal:* levels have no inherent ordering (e.g., party choice: CDU, SPD, Greens, etc.) \n\n> Data types are conceptual\n\n## **Number of variables involved**\n\n-   Univariate data analysis - distribution of single variable\n\n-   Bivariate data analysis - relationship between two variables\n\n-   Multivariate data analysis - relationship between many variables at once, usually focusing on the relationship between two while conditioning for others\n\n## Describing shapes of numerical distributions\n\n-   shape:\n    -   skewness: right-skewed, left-skewed, symmetric (skew is to the side of the longer tail)\n    -   modality: unimodal, bimodal, multimodal, uniform\n-   center: mean (`mean`), median (`median`), mode (not always useful)\n-   spread: range (`range`), standard deviation (`sd`), inter-quartile range (IQR)\n-   unusual observations\n\n## Central Tendency: Mean\n\n<!-- ::: columns -->\n<!-- ::: {.column width=\"50%\"} -->\n\n**Mean:** arithmetic average, the \"typical\" value, the best guess about the value drawn from the distribution \n\n$$\\bar{x} = \\frac{x_1 + x_2 + x_3 + ... + x_N}{N} = \\frac{\\sum_{i=1}^{N}x_i}{N}$$\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(x = un_votes$percent_yes)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.2091304\n```\n:::\n\n```{.r .cell-code}\nsum(un_votes$percent_yes) / length(un_votes$percent_yes)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.2091304\n```\n:::\n:::\n\n\n## Central Tendency: Median\n\n\n**Median:** value of $x$ that falls in the middle position when observations are ordered ascending \n\n$$\\widetilde{x} =\\begin{cases}\n  x_\\frac{N+1}{2}                                    & \\text{if }N\\text{ is odd}\\\\\n  \\frac {1}{2}\\left(x_{\\frac{N}{2}} + x_{\\frac{N}{2} + 1}\\right) & \\text{if }N \\text{ is even}\n\\end{cases}$$\n<!-- :::  -->\n<!-- ::: {.column width=\"50%\"} -->\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmedian(x = un_votes$percent_yes)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.1052632\n```\n:::\n\n```{.r .cell-code}\nsummary(un_votes$percent_yes)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.0000  0.0000  0.1053  0.2091  0.3333  1.0000 \n```\n:::\n:::\n\n<!-- :::  -->\n<!-- :::  -->\n\n\n## Problems with Single Numbers\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\">  </th>\n   <th style=\"text-align:right;\"> Average Weight </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Cats </td>\n   <td style=\"text-align:right;\"> 40.14931 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Dogs </td>\n   <td style=\"text-align:right;\"> 40.07032 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n::: columns\n::: {.column width=\"50%\"}\n\n\n::: {.cell fig.dim='[4.8,3.75]'}\n::: {.cell-output-display}\n![](02-describing-variables_files/figure-revealjs/animal-weight-bar-1.png){width=100%}\n:::\n:::\n\n\n::: \n::: {.column width=\"50%\"}\n\n\n::: {.cell fig.dim='[4.8,3.75]'}\n::: {.cell-output-display}\n![](02-describing-variables_files/figure-revealjs/animal-weight-points-1.png){width=100%}\n:::\n:::\n\n\n::: \n::: \n\n\n## Sample Dispersion: Variance\n\n<!-- ::: {.column width=\"60%\"} -->\n\n**Variance:** measure of the typical departure from the mean of a dataset \n\n$$\ns^2 = \\frac{\\sum_{i=1}^{N}(x_i - \\bar{x})^2} {N - 1}\n$$\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvar(x = un_votes$percent_yes)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.06551721\n```\n:::\n:::\n\n\n## Sample Dispersion: Standard Deviation\n\n**Standard Deviation $s$:** measure of the typical departure from the mean of a dataset (intuitive scale)\n\n$$\ns = \\sqrt{\\frac{\\sum_{i=1}^{N}(x_i - \\bar{x})^2} {N - 1}} = \\sqrt{s^2}\n$$\n<!-- :::  -->\n<!-- ::: {.column width=\"40%\"} -->\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsd(x = un_votes$percent_yes)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.2559633\n```\n:::\n:::\n\n\n<!-- :::  -->\n\n\n\n\n\n\n## Quantiles and Range\n\n\n::: columns\n<!-- ::: {.column width=\"50%\"} -->\n\n- **Range:** difference between smallest and largest value \n\n<!-- $$range = x_{max} - x_{min}$$ -->\n\n- **Interquantile Range:** range of the middle 50% of the data, distance between the first quartile (25th percentile) and third quartile (75th percentile) \n\n\n<!-- :::  -->\n<!-- ::: {.column width=\"50%\"} -->\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrange(un_votes$percent_yes)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0 1\n```\n:::\n\n```{.r .cell-code}\nrange(un_votes$percent_yes) %>% \n  diff() \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1\n```\n:::\n\n```{.r .cell-code}\nsummary(un_votes$percent_yes)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.0000  0.0000  0.1053  0.2091  0.3333  1.0000 \n```\n:::\n\n```{.r .cell-code}\nIQR(x = un_votes$percent_yes)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.3333333\n```\n:::\n:::\n\n\n<!-- :::  -->\n::: \n\n# Grammar of graphics: `ggplot2`\n\n## Data visualization\n\n> *\"The simple graph has brought more information to the data analyst's mind than any other device.\" \\-\\-- John Tukey*\n\n-   Data visualization is the creation and study of the visual representation of data\n\n-   Many tools for visualizing data \\-- `R` is one of them\n\n-   Many approaches/systems within `R` for making data visualizations \\-- **ggplot2** is one of them, and that's what we're going to use\n\n------------------------------------------------------------------------\n\n![](images/minard.png)\n\n## Temperature\n\n![](https://datavizs22.classes.andrewheiss.com/slides/03-slides_files/figure-html/minard-temps-1.png)\n\n## Causalties\n\n![](https://datavizs22.classes.andrewheiss.com/slides/03-slides_files/figure-html/minard-deaths-1.png){width=\"50%\"}\n\n------------------------------------------------------------------------\n\n## Grammar of Graphics Logic\n\n::: columns\n::: {.column width=\"60%\"}\n-   Map *data* to *aesthetics*\n-   *Aesthetic*: visual property of the graph\n    -   position\n    -   shape\n    -   color\n    -   transparency\n:::\n\n::: {.column width=\"40%\"}\n![](https://m.media-amazon.com/images/I/61-YvOkZN9L.jpg){fig-align=\"right\"}\n:::\n:::\n\n## Mapping Data to Aesthetics\n\n::: panel-tabset\n### Description\n\n| Data           | Aesthetic         | Graphic/Geometry |\n|----------------|-------------------|------------------|\n| Longitude      | Position (x-axis) | Point            |\n| Latitude       | Position (y-axis) | Point            |\n| Army size      | Size              | Path             |\n| Army direction | Color             | Path             |\n| Date           | Position (x-axis) | Line + text      |\n| Temperature    | Position (y-axis) | Line + text      |\n\n### Image\n\n![](images/minard.png)\n:::\n\n## ggplot2 âˆˆ tidyverse\n\n::: columns\n::: {.column width=\"40%\"}\n![](images/ggplot2-part-of-tidyverse.png){fig-align=\"left\"}\n:::\n\n::: {.column width=\"60%\"}\n-   **ggplot2** is tidyverse's data visualization package\n\n-   `gg` in **ggplot2** stands for Grammar of Graphics\n\n<!-- -   `ggplot()` is the main function -->\n\n-   Installation:\n\n    ``` r\n    install.packages(\"tidyverse\")\n    library(ggplot2)\n    ```\n\n-   For help with ggplot2, see [ggplot2.tidyverse.org](http://ggplot2.tidyverse.org/)\n:::\n:::\n\n<!-- ::: aside -->\n\n<!-- Source: [BloggoType](http://bloggotype.blogspot.com/2016/08/holiday-notes2-grammar-of-graphics.html) -->\n\n<!-- ::: -->\n\n## Plotting with layers\n\n::: columns\n::: {.column width=\"45%\"}\n![](images/ggplot-layers@4x.png){fig-align=\"left\"}\n:::\n\n::: {.column width=\"55%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = [dataset],\n       mapping = aes(\n         x = [x - variable],\n         y = [y - variable]\n         )\n       ) +\n  geom_xxx() +\n  other options\n```\n:::\n\n:::\n:::\n\n<!-- ## Napoleon's Troops Data -->\n\n<!-- ```{r minard-troops, echo=FALSE, warning=FALSE} -->\n\n<!-- library(tidyverse) -->\n\n<!-- # https://github.com/vincentarelbundock/Rdatasets/tree/master/csv/HistData -->\n\n<!-- troops <- read_csv(\"https://raw.githubusercontent.com/vincentarelbundock/Rdatasets/master/csv/HistData/Minard.troops.csv\") %>%  -->\n\n<!--   select(longitude = long, latitude = lat, direction, survivors) -->\n\n<!-- ``` -->\n\n<!-- ```{r head-troops, echo=FALSE} -->\n\n<!-- troops %>%  -->\n\n<!--   slice(1:3) %>%  -->\n\n<!--   mutate_all(as.character) %>%  -->\n\n<!--   bind_rows(tibble(longitude = \"â€¦\", latitude = \"â€¦\", direction = \"â€¦\", survivors = \"â€¦\"), -->\n\n<!--             troops %>%  -->\n\n<!--   slice(50:51) %>%  mutate_all(as.character)) %>%  -->\n\n<!--   knitr::kable(format = \"html\") -->\n\n<!-- ``` -->\n\n<!-- --- -->\n\n<!-- ```{r show-basic-minard, echo=FALSE, fig.width=16, fig.height=8, out.width=\"100%\"} -->\n\n<!-- ggplot(data = troops, -->\n\n<!--        mapping = aes(x = longitude, -->\n\n<!--                      y = latitude, -->\n\n<!--                      color = direction, -->\n\n<!--                      size = survivors)) + -->\n\n<!--   geom_path(lineend = \"round\",  -->\n\n<!--             linejoin = \"mitre\") +  -->\n\n<!--   scale_size_continuous(range = c(1, 20), -->\n\n<!--                         labels = scales::comma) + -->\n\n<!--   theme_gray(base_size = 20) -->\n\n<!-- ``` -->\n\n## Possible aesthetics\n\n::: columns\n::: {.column width=\"33%\"}\n\n\n\n\n**`color` discrete**\n\n\n::: {.cell fig.dim='[4,2]'}\n::: {.cell-output-display}\n![](02-describing-variables_files/figure-revealjs/aes-color-discrete-1.png){width=100%}\n:::\n:::\n\n\n**`color` continuous**\n\n\n::: {.cell fig.dim='[4,2]'}\n::: {.cell-output-display}\n![](02-describing-variables_files/figure-revealjs/aes-color-continuous-1.png){width=100%}\n:::\n:::\n\n:::\n\n::: {.column width=\"33%\"}\n`size`\n\n\n::: {.cell fig.dim='[4,2]'}\n::: {.cell-output-display}\n![](02-describing-variables_files/figure-revealjs/aes-size-1.png){width=100%}\n:::\n:::\n\n\n`fill`\n\n\n::: {.cell fig.dim='[4,2]'}\n::: {.cell-output-display}\n![](02-describing-variables_files/figure-revealjs/aes-fill-1.png){width=100%}\n:::\n:::\n\n:::\n\n::: {.column width=\"33%\"}\n`shape`\n\n\n::: {.cell fig.dim='[4,2]'}\n::: {.cell-output-display}\n![](02-describing-variables_files/figure-revealjs/aes-shape-1.png){width=100%}\n:::\n:::\n\n\n`alpha`\n\n\n::: {.cell fig.dim='[4,2]'}\n::: {.cell-output-display}\n![](02-describing-variables_files/figure-revealjs/aes-alpha-1.png){width=100%}\n:::\n:::\n\n:::\n:::\n\n## Example geoms\n\n<br>\n\n|                                          |                  |            |\n|------------------------------------------|------------------|:----------:|\n| ![](images/geom_bar.png){width=\"50\"}     | `geom_col()`     | Bar charts |\n| ![](images/geom_text.png){width=\"50\"}    | `geom_text()`    |    Text    |\n| ![](images/geom_point.png){width=\"50\"}   | `geom_point()`   |   Points   |\n| ![](images/geom_boxplot.png){width=\"50\"} | `geom_boxplot()` |  Boxplots  |\n| ![](images/geom_sf.png){width=\"50\"}      | `geom_sf()`      |    Maps    |\n\n## Additional layers\n\n-   *scales* change properties of variable mapping\n-   *facets* show subplots for different subsets of data\n-   *coordinates* change the coordinate system\n-   *labels* add labels to the plot\n-   *theme* changes the appearance of anything in the plot\n-   *theme options* make adjustments to existing *themes*\n\n## Tidy data\n\n-   For `ggplot()` to work, your data needs to be in a *tidy* format\n-   This doesn't mean that it's clean, it refers to the structure of the data\n-   All the packages in the *tidyverse* work best with tidy data; that why it's called that!\n\n## Tidy means:\n\n-   Each variable has its own column\n-   Each observation has its own row\n-   Each value has its own cell\n\n![](https://d33wubrfki0l68.cloudfront.net/6f1ddb544fc5c69a2478e444ab8112fb0eea23f8/91adc/images/tidy-1.png)\n\n## Same Data, Different Formats\n\n::: columns\n::: {.column width=\"50%\"}\n\nUntidy Data\n\n![](https://datavizs22.classes.andrewheiss.com/slides/img/03/untidy-example.png)\n:::\n\n::: {.column width=\"50%\"}\n\nTidy data\n![](https://datavizs22.classes.andrewheiss.com/slides/img/03/tidy-example.png)\n:::\n:::\n\n## Tidy is Long Data\n\n![](https://datavizs22.classes.andrewheiss.com/slides/img/03/original-dfs-tidy.png)\n\n\n## Data: US Governors\n\n\n> Does political office cause worse or better longevity prospects? Two perspectives in the literature offer contradicting answers. First, increased income, social status, and political connections obtained through holding office can increase longevity. Second, increased stress and working hours associated with holding office can have detrimental effects on longevity. <...> The results show that politicians winning a close election live 5â€“10 years longer than candidates who lose.\n\n## Data: US Governors\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(governors)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 1,092\nColumns: 14\n$ state        <chr> \"Alabama\", \"Alabama\", \"Alabama\", \"Alabama\", \"Alabama\", \"Aâ€¦\n$ year         <dbl> 1946, 1946, 1950, 1954, 1954, 1958, 1962, 1966, 1966, 197â€¦\n$ first_name   <chr> \"James\", \"Lyman\", \"Gordon\", \"Tom\", \"James\", \"William\", \"Gâ€¦\n$ last_name    <chr> \"Folsom\", \"Ward\", \"Persons\", \"Abernethy\", \"Folsom\", \"Longâ€¦\n$ party        <chr> \"Democrat\", \"Republican\", \"Democrat\", \"Republican\", \"Demoâ€¦\n$ sex          <chr> \"Male\", \"Male\", \"Male\", \"Male\", \"Male\", \"Male\", \"Male\", \"â€¦\n$ died         <date> 1987-11-21, 1948-12-17, 1965-05-29, 1968-03-07, 1987-11-â€¦\n$ status       <chr> \"Challenger\", \"Challenger\", \"Challenger\", \"Challenger\", \"â€¦\n$ win_margin   <dbl> 77.334394, -77.334394, 82.206564, -46.748166, 46.748166, â€¦\n$ region       <chr> \"South\", \"South\", \"South\", \"South\", \"South\", \"South\", \"Soâ€¦\n$ population   <dbl> 2906000, 2906000, 3058000, 3014000, 3014000, 3163000, 332â€¦\n$ election_age <dbl> 38.07255, 78.54894, 48.74743, 46.54620, 46.07255, 33.2703â€¦\n$ death_age    <dbl> 79.11567, 80.66530, 63.31006, 59.88227, 79.11567, 87.8193â€¦\n$ lived_after  <dbl> 41.043121, 2.116359, 14.562628, 13.336071, 33.043121, 54.â€¦\n```\n:::\n:::\n\n\n<!-- ## Spot the Difference -->\n\n<!-- **Mapping vs. setting** -->\n\n<!-- ```{r} -->\n<!-- #| eval: false -->\n\n<!-- ggplot(governors) + -->\n<!--   geom_jitter(aes(x = party, y = election_age,  -->\n<!--                  color = \"blue\")) -->\n\n<!-- ggplot(governors) + -->\n<!--   geom_jitter(aes(x = party, y = election_age),  -->\n<!--                  color = \"blue\") -->\n<!-- ``` -->\n\n<!-- ## **Global vs. local** -->\n\n<!-- **Any aesthetics in `ggplot()` will show up in all `geom_` layers** -->\n\n<!-- ```{r} -->\n<!-- #| eval: false -->\n\n<!-- ggplot(governors, aes(x = party, y = election_age, color = party)) + -->\n<!--   geom_boxplot() + -->\n<!--   geom_jitter(alpha = 0.5)  -->\n<!-- ``` -->\n\n<!-- ``` r -->\n<!-- ggplot(governors) + -->\n<!--   geom_jitter(aes(x = party, y = election_age, color = party)) -->\n<!-- ``` -->\n\n<!-- **Any aesthetics in `geom_` layers only apply to that layer** -->\n\n<!-- ```{r} -->\n<!-- #| eval: false -->\n\n<!-- ggplot(governors, aes(x = party, y = election_age)) + -->\n<!--   geom_boxplot() + -->\n<!--   geom_jitter(aes(color = party), alpha = 0.5)  -->\n<!-- ``` -->\n\n<!-- ## Theoretical Distributions -->\n\n## Styling the Code: Why\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngovernors %>% \n  filter(election_age > 50, sex == \"Male\")\n\ngovernors %>% filter(election_age > 50, sex == \"Male\")\n\ngovernors %>% \n  filter(election_age > 50,\n         sex == \"Male\")\n\ngovernors %>% filter(election_age>50, sex==\"Male\")\n\nfilter(governors,election_age>50, sex==\"Male\")\n\ngovernors %>% \nfilter(election_age > 50, \n                            sex==\"Male\")\n\nfilter ( governors,election_age>   50,     sex==\"Male\" )\n```\n:::\n\n\n## Styling the Code: How\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"styler\")\nlibrary(styler)\n```\n:::\n\n\n![](images/styler.png){width=\"80%\"} - More on styling [on course website](https://r4da.live/resource/style.html)\n\n<!-- ## Tables for Descriptive Statistics -->\n\n<!-- -   `stargazer`: PDF + HTML (solid general descriptive stats tables) !refuses to work with tibbles -->\n<!-- -   `skimr`: good for overall dataset description -->\n<!-- -   `modelsummary`: flexible tables -->\n\n## Saving Your Plots: Bitmaps vs Vector\n\n::: columns\n::: {.column width=\"50%\"}\n![](https://datavizs22.classes.andrewheiss.com/slides/img/02/example-bitmap.png)\n\n- JPEG: Photographs\n\n- PNG/GIF: Images with limited colors\n\n::: \n::: {.column width=\"50%\"}\n\n![](https://datavizs22.classes.andrewheiss.com/slides/img/02/example-vector.png)\n\n\n- PDF: Anything vector based\n\n- SVG: Vectors online\n\n::: \n::: \n\n**Save your plots as PNG or SVG (Web) or PDF (Print)**\n\n## To-Do List\n\n-   Problem Set 2\n-   Readings/videos for week 3\n",
    "supporting": [
      "02-describing-variables_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}