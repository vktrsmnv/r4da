{
  "hash": "45627ea61df429a87812488db34694f3",
  "result": {
    "markdown": "---\ntitle: \"Describing Variables\"\nsubtitle: \"R for Data Analysis<br>Session 2\"\ntitle-slide-attributes:\n  data-background-size: stretch\n  data-slide-number: none\nauto-stretch: false\ninstitute: \"University of Mannheim<br>Fall 2023\"\nauthor: \"Viktoriia Semenova\"\nfooter: \"[ðŸ”— r4da.live](https://r4da.live/)\"\nlogo: images/logo.png\nformat:\n  revealjs:\n    theme: slides.scss\n    transition: fade\n    incremental: true   \n    slide-number: true\n    chalkboard: true\neditor: visual\nexecute:\n  echo: true\n---\n\n\n\n\n## Getting Lab Material {.smaller}\n\n-   Open `r4da-labs.Rproj` file to open the *labs* project.\n-   Go into *Git* pane.\n-   If there are any files you changed, you will see them in the window.\n    -   Select all these files.\n    -   Click on *Commit*, write a commit message, and save it.\n    -   If you click on *Push*, it will give you a `git` error message\\\n-   Click on *Pull* to get the new files uploaded.\n\n<!-- ![](images/github-pull-success.png) -->\n\n## `tidyverse` package is a shortcut\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"tidyverse\")\n```\n:::\n\n\n```         \ninstall.packages(\"ggplot2\")\ninstall.packages(\"dplyr\")\ninstall.packages(\"tidyr\")\ninstall.packages(\"readr\")\ninstall.packages(\"purrr\")\ninstall.packages(\"tibble\")\ninstall.packages(\"stringr\")\ninstall.packages(\"forcats\")\ninstall.packages(\"lubridate\")\ninstall.packages(\"hms\")\ninstall.packages(\"DBI\")\ninstall.packages(\"haven\")\ninstall.packages(\"httr\")\ninstall.packages(\"jsonlite\")\ninstall.packages(\"readxl\")\ninstall.packages(\"rvest\")\ninstall.packages(\"xml2\")\ninstall.packages(\"modelr\")\ninstall.packages(\"broom\")\n```\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"tidyverse\")\n```\n:::\n\n\n```         \nlibrary(\"ggplot2\")\nlibrary(\"dplyr\")\nlibrary(\"tidyr\")\nlibrary(\"readr\")\nlibrary(\"purrr\")\nlibrary(\"tibble\")\nlibrary(\"stringr\")\nlibrary(\"forcats\")\n```\n:::\n:::\n\n# Describing Variables\n\n## Types of Data in Political Science\n\n-   **Cross-section:** a snapshot of a sample of units (e.g., people, countries, governments) at one point of time\n\n-   **Time series:** observations on variables over time\n\n-   **Pooled time series cross-section:** comparable time series data observed on variety of units (e.g., people, countries, governments)\n\n    -   Usually few cases, but long time series\n\n-   **Panel data:** large number of the same cross-sectional units (e.g., survey respondents) observed repeatedly\n\n    -   Usually many cases, but shorter time series\n\n------------------------------------------------------------------------\n\n## ![](https://openintro-ims.netlify.app/01-data-hello_files/figure-html/variables-1.png)\n\n## Types of Variables\n\n-   **Numerical (quantitative):** take on values sensible to add, subtract, take averages, etc. with these values\n    -   *Continuous:* take on any of an infinite number of values within a given range (e.g., vote share) <svg viewBox=\"0 0 581 512\" style=\"height:1em;position:relative;display:inline-block;top:.1em;\" xmlns=\"http://www.w3.org/2000/svg\">  <path d=\"M581 226.6C581 119.1 450.9 32 290.5 32S0 119.1 0 226.6C0 322.4 103.3 402 239.4 418.1V480h99.1v-61.5c24.3-2.7 47.6-7.4 69.4-13.9L448 480h112l-67.4-113.7c54.5-35.4 88.4-84.9 88.4-139.7zm-466.8 14.5c0-73.5 98.9-133 220.8-133s211.9 40.7 211.9 133c0 50.1-26.5 85-70.3 106.4-2.4-1.6-4.7-2.9-6.4-3.7-10.2-5.2-27.8-10.5-27.8-10.5s86.6-6.4 86.6-92.7-90.6-87.9-90.6-87.9h-199V361c-74.1-21.5-125.2-67.1-125.2-119.9zm225.1 38.3v-55.6c57.8 0 87.8-6.8 87.8 27.3 0 36.5-38.2 28.3-87.8 28.3zm-.9 72.5H365c10.8 0 18.9 11.7 24 19.2-16.1 1.9-33 2.8-50.6 2.9v-22.1z\"></path></svg> `numeric`\n    -   *Discrete:* take on one of a specific set of numeric values (e.g., number of human fatalities in conflict) <svg viewBox=\"0 0 581 512\" style=\"height:1em;position:relative;display:inline-block;top:.1em;\" xmlns=\"http://www.w3.org/2000/svg\">  <path d=\"M581 226.6C581 119.1 450.9 32 290.5 32S0 119.1 0 226.6C0 322.4 103.3 402 239.4 418.1V480h99.1v-61.5c24.3-2.7 47.6-7.4 69.4-13.9L448 480h112l-67.4-113.7c54.5-35.4 88.4-84.9 88.4-139.7zm-466.8 14.5c0-73.5 98.9-133 220.8-133s211.9 40.7 211.9 133c0 50.1-26.5 85-70.3 106.4-2.4-1.6-4.7-2.9-6.4-3.7-10.2-5.2-27.8-10.5-27.8-10.5s86.6-6.4 86.6-92.7-90.6-87.9-90.6-87.9h-199V361c-74.1-21.5-125.2-67.1-125.2-119.9zm225.1 38.3v-55.6c57.8 0 87.8-6.8 87.8 27.3 0 36.5-38.2 28.3-87.8 28.3zm-.9 72.5H365c10.8 0 18.9 11.7 24 19.2-16.1 1.9-33 2.8-50.6 2.9v-22.1z\"></path></svg> `integer`\n-   **Categorical (qualitative):** take on a limited number of distinct categories categories can be identified with numbers, but not sensible to do arithmetic operations <svg viewBox=\"0 0 581 512\" style=\"height:1em;position:relative;display:inline-block;top:.1em;\" xmlns=\"http://www.w3.org/2000/svg\">  <path d=\"M581 226.6C581 119.1 450.9 32 290.5 32S0 119.1 0 226.6C0 322.4 103.3 402 239.4 418.1V480h99.1v-61.5c24.3-2.7 47.6-7.4 69.4-13.9L448 480h112l-67.4-113.7c54.5-35.4 88.4-84.9 88.4-139.7zm-466.8 14.5c0-73.5 98.9-133 220.8-133s211.9 40.7 211.9 133c0 50.1-26.5 85-70.3 106.4-2.4-1.6-4.7-2.9-6.4-3.7-10.2-5.2-27.8-10.5-27.8-10.5s86.6-6.4 86.6-92.7-90.6-87.9-90.6-87.9h-199V361c-74.1-21.5-125.2-67.1-125.2-119.9zm225.1 38.3v-55.6c57.8 0 87.8-6.8 87.8 27.3 0 36.5-38.2 28.3-87.8 28.3zm-.9 72.5H365c10.8 0 18.9 11.7 24 19.2-16.1 1.9-33 2.8-50.6 2.9v-22.1z\"></path></svg> `character` or `factor`\n    -   *Ordinal:* levels have an inherent ordering (e.g., Likert scales)\n    -   *Nominal:* levels have no inherent ordering (e.g., party choice: CDU, SPD, Greens, etc.)\n\n> Data types are conceptual\n\n## **Number of variables involved**\n\n-   Univariate data analysis - distribution of single variable\n\n-   Bivariate data analysis - relationship between two variables\n\n-   Multivariate data analysis - relationship between many variables at once, usually focusing on the relationship between two while conditioning for others\n\n## Describing shapes of numerical distributions\n\n-   shape:\n    -   skewness: right-skewed, left-skewed, symmetric (skew is to the side of the longer tail)\n    -   modality: unimodal, bimodal, multimodal, uniform\n-   center: mean (`mean`), median (`median`), mode (not always useful)\n-   spread: range (`range`), standard deviation (`sd`), inter-quartile range (IQR)\n-   unusual observations\n\n## Central Tendency: Mean\n\n<!-- ::: columns -->\n\n<!-- ::: {.column width=\"50%\"} -->\n\n**Mean:** arithmetic average, the \"typical\" value, the best guess about the value drawn from the distribution\n\n$$\\bar{x} = \\frac{x_1 + x_2 + x_3 + ... + x_N}{N} = \\frac{\\sum_{i=1}^{N}x_i}{N}$$\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(x = un_votes$percent_yes)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.2091304\n```\n:::\n\n```{.r .cell-code}\nsum(un_votes$percent_yes) / length(un_votes$percent_yes)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.2091304\n```\n:::\n:::\n\n\n## Central Tendency: Median\n\n**Median:** value of $x$ that falls in the middle position when observations are ordered ascending\n\n$$\\widetilde{x} =\\begin{cases}\n  x_\\frac{N+1}{2}                                    & \\text{if }N\\text{ is odd}\\\\\n  \\frac {1}{2}\\left(x_{\\frac{N}{2}} + x_{\\frac{N}{2} + 1}\\right) & \\text{if }N \\text{ is even}\n\\end{cases}$$ <!-- :::  --> <!-- ::: {.column width=\"50%\"} -->\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmedian(x = un_votes$percent_yes)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.1052632\n```\n:::\n\n```{.r .cell-code}\nsummary(un_votes$percent_yes)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.0000  0.0000  0.1053  0.2091  0.3333  1.0000 \n```\n:::\n:::\n\n\n<!-- :::  -->\n\n<!-- :::  -->\n\n## Problems with Single Numbers\n\n\n::: {.cell}\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\">  </th>\n   <th style=\"text-align:right;\"> Average Weight </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> Cats </td>\n   <td style=\"text-align:right;\"> 40.14931 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> Dogs </td>\n   <td style=\"text-align:right;\"> 40.07032 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n::: columns\n::: {.column width=\"50%\"}\n\n::: {.cell fig.dim='[4.8,3.75]'}\n::: {.cell-output-display}\n![](002-slides_files/figure-revealjs/animal-weight-bar-1.png){width=100%}\n:::\n:::\n\n:::\n\n::: {.column width=\"50%\"}\n\n::: {.cell fig.dim='[4.8,3.75]'}\n::: {.cell-output-display}\n![](002-slides_files/figure-revealjs/animal-weight-points-1.png){width=100%}\n:::\n:::\n\n:::\n:::\n\n## Sample Dispersion: Variance\n\n<!-- ::: {.column width=\"60%\"} -->\n\n**Variance:** measure of the typical departure from the mean of a dataset\n\n$$\ns^2 = \\frac{\\sum_{i=1}^{N}(x_i - \\bar{x})^2} {N - 1}\n$$\n\n\n::: {.cell}\n\n```{.r .cell-code}\nvar(x = un_votes$percent_yes)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.06551721\n```\n:::\n:::\n\n\n![](https://tinystats.github.io/teacups-giraffes-and-statistics/04_variance_files/figure-html/unnamed-chunk-1-.gif){width=\"599\"}\n\n## Population vs Sample ($N$ vs $nâˆ’1$)\n\n![](https://tinystats.github.io/teacups-giraffes-and-statistics/04_variance_files/figure-html/unnamed-chunk-6-.gif){width=\"432\"}\n\n## Inherent Bias {.smaller}\n\n- The sum of squares from $\\mu$ will *always* be greater than the $\\bar x$ sum of squares \n- $\\bar x$'s location already minimizes the total distance of all the observations to the center by the definition of sample mean\n- A line at any other location would be a line that is not mimimizing the distance for observations in our sample\n\n![](https://tinystats.github.io/teacups-giraffes-and-statistics/images/04_variance/Squares2.png){width=\"432\"}\n\n## Sample Dispersion: Standard Deviation\n\n**Standard Deviation** $s$: measure of the typical departure from the mean of a dataset (intuitive scale)\n\n$$\ns = \\sqrt{\\frac{\\sum_{i=1}^{N}(x_i - \\bar{x})^2} {N - 1}} = \\sqrt{s^2}\n$$ <!-- :::  --> <!-- ::: {.column width=\"40%\"} -->\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsd(x = un_votes$percent_yes)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.2559633\n```\n:::\n:::\n\n\n![](https://tinystats.github.io/teacups-giraffes-and-statistics/images/04_variance/General_empirical.jpg)\n<!-- :::  -->\n\n## Quantiles and Range\n\n::: columns\n<!-- ::: {.column width=\"50%\"} -->\n\n-   **Range:** difference between smallest and largest value\n\n<!-- $$range = x_{max} - x_{min}$$ -->\n\n-   **Interquantile Range:** range of the middle 50% of the data, distance between the first quartile (25th percentile) and third quartile (75th percentile)\n\n<!-- :::  -->\n\n<!-- ::: {.column width=\"50%\"} -->\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrange(un_votes$percent_yes)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0 1\n```\n:::\n\n```{.r .cell-code}\nrange(un_votes$percent_yes) %>% \n  diff() \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 1\n```\n:::\n\n```{.r .cell-code}\nsummary(un_votes$percent_yes)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.0000  0.0000  0.1053  0.2091  0.3333  1.0000 \n```\n:::\n\n```{.r .cell-code}\nIQR(x = un_votes$percent_yes)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 0.3333333\n```\n:::\n:::\n\n\n<!-- :::  -->\n:::\n\n# Grammar of graphics: `ggplot2`\n\n## Data visualization\n\n> *\"The simple graph has brought more information to the data analyst's mind than any other device.\" \\-\\-- John Tukey*\n\n-   Data visualization is the creation and study of the visual representation of data\n\n-   Many tools for visualizing data \\-- `R` is one of them\n\n-   Many approaches/systems within `R` for making data visualizations \\-- **ggplot2** is one of them, and that's what we're going to use\n\n------------------------------------------------------------------------\n\n![](images/minard.png)\n\n## Temperature\n\n![](https://datavizs22.classes.andrewheiss.com/slides/03-slides_files/figure-html/minard-temps-1.png)\n\n## Causalties\n\n![](https://datavizs22.classes.andrewheiss.com/slides/03-slides_files/figure-html/minard-deaths-1.png){width=\"50%\"}\n\n------------------------------------------------------------------------\n\n## Grammar of Graphics Logic\n\n::: columns\n::: {.column width=\"60%\"}\n-   Map *data* to *aesthetics*\n-   *Aesthetic*: visual property of the graph\n    -   position\n    -   shape\n    -   color\n    -   transparency\n:::\n\n::: {.column width=\"40%\"}\n![](https://m.media-amazon.com/images/I/61-YvOkZN9L.jpg){fig-align=\"right\"}\n:::\n:::\n\n## Mapping Data to Aesthetics\n\n::: panel-tabset\n### Description\n\n| Data           | Aesthetic         | Graphic/Geometry |\n|----------------|-------------------|------------------|\n| Longitude      | Position (x-axis) | Point            |\n| Latitude       | Position (y-axis) | Point            |\n| Army size      | Size              | Path             |\n| Army direction | Color             | Path             |\n| Date           | Position (x-axis) | Line + text      |\n| Temperature    | Position (y-axis) | Line + text      |\n\n### Image\n\n![](images/minard.png)\n:::\n\n## ggplot2 âˆˆ tidyverse\n\n::: columns\n::: {.column width=\"40%\"}\n![](images/ggplot2-part-of-tidyverse.png){fig-align=\"left\"}\n:::\n\n::: {.column width=\"60%\"}\n-   **ggplot2** is tidyverse's data visualization package\n\n-   `gg` in **ggplot2** stands for Grammar of Graphics\n\n<!-- -   `ggplot()` is the main function -->\n\n-   Installation:\n\n    ``` r\n    install.packages(\"tidyverse\")\n    library(ggplot2)\n    ```\n\n-   For help with ggplot2, see [ggplot2.tidyverse.org](http://ggplot2.tidyverse.org/)\n:::\n:::\n\n<!-- ::: aside -->\n\n<!-- Source: [BloggoType](http://bloggotype.blogspot.com/2016/08/holiday-notes2-grammar-of-graphics.html) -->\n\n<!-- ::: -->\n\n## Plotting with layers\n\n::: columns\n::: {.column width=\"45%\"}\n![](images/ggplot-layers@4x.png){fig-align=\"left\"}\n:::\n\n::: {.column width=\"55%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = [dataset],\n       mapping = aes(\n         x = [x - variable],\n         y = [y - variable]\n         )\n       ) +\n  geom_xxx() +\n  other options\n```\n:::\n\n:::\n:::\n\n## Possible aesthetics\n\n::: columns\n::: {.column width=\"33%\"}\n\n\n\n\n**`color` discrete**\n\n\n::: {.cell fig.dim='[4,2]'}\n::: {.cell-output-display}\n![](002-slides_files/figure-revealjs/aes-color-discrete-1.png){width=100%}\n:::\n:::\n\n\n**`color` continuous**\n\n\n::: {.cell fig.dim='[4,2]'}\n::: {.cell-output-display}\n![](002-slides_files/figure-revealjs/aes-color-continuous-1.png){width=100%}\n:::\n:::\n\n:::\n\n::: {.column width=\"33%\"}\n`size`\n\n\n::: {.cell fig.dim='[4,2]'}\n::: {.cell-output-display}\n![](002-slides_files/figure-revealjs/aes-size-1.png){width=100%}\n:::\n:::\n\n\n`fill`\n\n\n::: {.cell fig.dim='[4,2]'}\n::: {.cell-output-display}\n![](002-slides_files/figure-revealjs/aes-fill-1.png){width=100%}\n:::\n:::\n\n:::\n\n::: {.column width=\"33%\"}\n`shape`\n\n\n::: {.cell fig.dim='[4,2]'}\n::: {.cell-output-display}\n![](002-slides_files/figure-revealjs/aes-shape-1.png){width=100%}\n:::\n:::\n\n\n`alpha`\n\n\n::: {.cell fig.dim='[4,2]'}\n::: {.cell-output-display}\n![](002-slides_files/figure-revealjs/aes-alpha-1.png){width=100%}\n:::\n:::\n\n:::\n:::\n\n## Example geoms\n\n<br>\n\n|                                          |                  |            |\n|------------------------------------------|------------------|:----------:|\n| ![](images/geom_bar.png){width=\"50\"}     | `geom_col()`     | Bar charts |\n| ![](images/geom_text.png){width=\"50\"}    | `geom_text()`    |    Text    |\n| ![](images/geom_point.png){width=\"50\"}   | `geom_point()`   |   Points   |\n| ![](images/geom_boxplot.png){width=\"50\"} | `geom_boxplot()` |  Boxplots  |\n| ![](images/geom_sf.png){width=\"50\"}      | `geom_sf()`      |    Maps    |\n\n## Additional layers\n\n-   *scales* change properties of variable mapping\n-   *facets* show subplots for different subsets of data\n-   *coordinates* change the coordinate system\n-   *labels* add labels to the plot\n-   *theme* changes the appearance of anything in the plot\n-   *theme options* make adjustments to existing *themes*\n\n## Tidy data\n\n-   For `ggplot()` to work, your data needs to be in a *tidy* format\n-   This doesn't mean that it's clean, it refers to the structure of the data\n-   All the packages in the *tidyverse* work best with tidy data; that why it's called that!\n\n## Tidy means:\n\n-   Each variable has its own column\n-   Each observation has its own row\n-   Each value has its own cell\n\n![](https://d33wubrfki0l68.cloudfront.net/6f1ddb544fc5c69a2478e444ab8112fb0eea23f8/91adc/images/tidy-1.png)\n\n## Same Data, Different Formats\n\n::: columns\n::: {.column width=\"50%\"}\nUntidy Data\n\n![](https://datavizs22.classes.andrewheiss.com/slides/img/03/untidy-example.png)\n:::\n\n::: {.column width=\"50%\"}\nTidy data ![](https://datavizs22.classes.andrewheiss.com/slides/img/03/tidy-example.png)\n:::\n:::\n\n## Tidy is Long Data\n\n![](https://datavizs22.classes.andrewheiss.com/slides/img/03/original-dfs-tidy.png)\n\n## Styling the Code: Why\n\n\n::: {.cell}\n\n```{.r .cell-code}\nun_votes %>% \n  filter(un_votes > 5, issue == \"Human rights\")\n\n\nun_votes %>% filter(un_votes > 5, issue == \"Human rights\")\n\nun_votes %>% \n  filter(un_votes > 5, \n         issue == \"Human rights\")\n\n\nun_votes %>% filter(un_votes>5,issue==\"Human rights\")\n\nun_votes %>% \n  filter(un_votes > 5,       issue == \"Human rights\")\n```\n:::\n\n\n## Styling the Code: How\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"styler\")\nlibrary(styler)\n\ninstall.packages(\"lint\")\nlibrary(lint)\n```\n:::\n\n\n![](images/styler.png){width=\"80%\"} - More on styling [on course website](https://r4da.live/resource/style.html)\n\n<!-- ## Tables for Descriptive Statistics -->\n\n<!-- -   `stargazer`: PDF + HTML (solid general descriptive stats tables) !refuses to work with tibbles -->\n\n<!-- -   `skimr`: good for overall dataset description -->\n\n<!-- -   `modelsummary`: flexible tables -->\n\n## Saving Your Plots: Bitmaps vs Vector\n\n::: columns\n::: {.column width=\"50%\"}\n![](https://datavizs22.classes.andrewheiss.com/slides/img/02/example-bitmap.png)\n\n-   JPEG: Photographs\n\n-   PNG/GIF: Images with limited colors\n:::\n\n::: {.column width=\"50%\"}\n![](https://datavizs22.classes.andrewheiss.com/slides/img/02/example-vector.png)\n\n-   PDF: Anything vector based\n\n-   SVG: Vectors online\n:::\n:::\n\n**Save your plots as PNG or SVG (Web) or PDF (Print)**\n\n## To-Do List\n\n-   Problem Set 2\n-   Readings/videos for week 3\n\n## Wrap Up\n",
    "supporting": [
      "002-slides_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}