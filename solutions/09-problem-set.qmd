---
title: "Problem Set 9: Suggested Solutions"
draft: true
editor_options: 
  chunk_output_type: console
---


```{r setup}
#| echo: fenced
#| include: false
# put all packages we use in a vector
p_needed <- c(
  "tidyverse", # shortcut for ggplot2, dplyr, readr
  "janitor", # clean variable names
  "broom", # for model output 
  "clarify", # for simulations 
  "knitr", # for tables 
  "sysfonts", # for fonts on plots 
  "showtext", # for fonts on plots 
  "modelsummary" # regression tables 
)

# check if they are already installed, install if not installed
lapply(
  p_needed[!(p_needed %in% rownames(installed.packages()))],
  install.packages
)

# load the packages
lapply(p_needed, library, character.only = TRUE)

font_add_google(name = "Noto Sans")
showtext_auto()

# set the theme for all plots to theme_bw
theme_set(theme_minimal(base_family = "Noto Sans", 
                        base_size = 10)) +
  theme(plot.title.position = "plot")

# load your dataset
cases <- read_csv("data/glynn_sen_daughters_by_case_1.csv") 
```


## Dataset 

> Glynn, Adam N., and Maya Sen. 2015. “Identifying Judicial Empathy: Does Having Daughters Cause Judges to Rule for Women’s Issues?” *American Journal of Political Science* 59(1): 37–54.

We will again work with the data from the article as before, but now switch from judge-level to case-level analysis. Instead of looking at the proportion of votes a judge ruled progressively, we will have data on multiple cases and see if a judge ruled progressively or not. In other words, our dependent variable will become discrete and binary. We will have data on multiple years for multiple circuits for multiple judges. For the sake of this task, we will ignore the fact that there is some nesting in the data structure.   

You will need to obtain the dataset yourself from the Dataverse website, which a place where you can find replication materials for many published papers (most often, datasets along with the code). You need the by-case dataset, i.e. one of the files in the `csv` format.

> Replication Data for Identifying Judicial Empathy: Does Having Daughters Cause Judges to Rule for Women’s Issues?: https://doi.org/10.7910/DVN/26544. 


## Task 0: Setup

- Update your names in the YAML.
- Download the dataset into `data` folder.
- Load the dataset in the `setup` chunk. 

## Task 1: Binary Dependent Variable Models


1. Ruling pro-feminist or not is conceptually only possible when an issue at question has a gendered component. Therefore, you will need to subset the cases that belong to certain topic areas. In particular, you can follow approach that the authors describe in the paper, and subset the cases that:  

> <...> explicitly involved (1) employment discrimination on the basis of gender by private actors, (2) employment discrimination on the basis of pregnancy by private actors, (3) reproductive rights or abortion, and (4) claims made under Title IX. This left us with 1,325 cases that had a gender component <...> Of these 1,325 cases, 310 were brought by male or transsexual plaintiffs or by plaintiffs representing men's or lesbian, gay, bisexual, and transgender (LGBT) interests. Because these cases did not go to the heart of our inquiry (and because many included male plaintiffs suing for adverse employment decisions due to sexual harassment by the plaintiff), we excluded them.

- The variables `area` and `femplaintiff` will contain the necessary information for subsetting. 
- In addition to that, subset the cases where the judge is a parent so that we remove the systematic differences between those who have children and don't. `child` variable contains the necessary info. We will only be working with the parents subset.   
- You may need to create `any_girls` variable and the variables for race and catholic. You can adapt your code from previous problem sets. 


```{r}
#| label: preprocessing 
#| echo: fenced
cases <- cases %>%
  clean_names() %>%
  filter(
    femplaintiff == 1, # remove male plaintiffs
    area == "employment" |
      area == "Title IX" |
      area == "pregnancy" |
      area == "abortion" |
      area == "reproductive rights",
    child > 0 # subset parents only 
  ) %>%
  mutate(
    any_girls = girls > 0, # or if_else(girls > 0, TRUE, FALSE)
    any_girls = as.numeric(any_girls),
    catholic = if_else(religion == 4, 1, 0),
    african = if_else(race == 2, 1, 0),
    hispanic = if_else(race == 3, 1, 0),
    asian = if_else(race == 4, 1, 0)
  )
```


2. Run a logistic regression with the following specification. Store the results in `m1`.

$$
\begin{aligned}
\log\left[ \frac { \widehat{Progressive~Vote = 1} }{ 1 - \widehat{Progressive~Vote = 1} } \right]  &= {\hat\beta}_{0}\ + {\hat\beta}_{1} \cdot \operatorname{At \ least \ 1 \ daughter}\ +  \ {\hat\beta}_{2} \cdot \operatorname{Woman}\ +  \ {\hat\beta}_{3} \cdot \operatorname{Age}\ + \\
&\quad {\hat\beta}_{4} \cdot \operatorname{Catholic}\ +  \ {\hat\beta}_{5} \cdot \operatorname{Asian}\ +  \ {\hat\beta}_{6} \cdot \operatorname{African}\ +  \ {\hat\beta}_{7} \cdot \operatorname{Hispanic}\ + \\
&\quad {\hat\beta}_{8} \cdot \operatorname{Republican}\ +  \ {\hat\beta}_{9} \cdot \operatorname{Number \ of \ kids}\ 
\end{aligned}
$$

```{r}
#| label: girls-presence 
#| echo: fenced
m1 <-
  glm(
    progressive_vote ~ any_girls + republican + age + catholic + woman +
      african + hispanic + child,
    family = binomial(link = logit),
    data = cases
  )

```

3. Now account for the number of children in the model without assuming that each additional kid has the same effect on the dependent variable. In other words, treat `kids` as a categorical variable (like `race`) and estimate separate coefficients for each number of kids (excluding the baseline). Store the results in `m2`. Do you find such an approach more reasonable than the one from before? Why (not)? 

> When treating number of kids as a numeric variable, we assume that each additional kid has equal impact on the dependent variable. With a categorical specification, we relax this assumption and allow for different effects for every additional kid. Hence, the coefficients for respective variables in this specificiation reflect the difference to the baseline category (which is one child, as we are working with *parents* subset), so the effect of having 1 vs. 2, 1 vs. 3, 1 vs. 4 kids and so on. With a large number of observations, such a specification allows for more flexibility and also potentialy captures more unobserved differences between the judges with different numbers of kids. 

```{r}
#| label: kids-categorical
#| echo: fenced
m2 <-
  glm(
    progressive_vote ~ any_girls + republican + age + catholic + woman +
      african + hispanic + factor(child),
    family = binomial(link = logit),
    data = cases
  )
```


4. Building on the model you find more reasonable, explore if the effect of having daughters actually depend on the number of daughters, not just their presence or not. Estimate two more specifications: one treating girls as a regular numeric variable and another one allowing for various coefficients for different number of daughters (as you did with number of kids before). Store the results in `m3` and `m4`.

```{r}
#| label: girls-number
#| echo: fenced 
m3 <-
  glm(
    progressive_vote ~ girls + republican + age + catholic + woman +
      african + hispanic + factor(child),
    family = binomial(link = logit),
    data = cases
  )

m4 <-
  glm(
    progressive_vote ~ factor(girls) + republican + age + catholic + woman +
      african + hispanic + factor(child),
    family = binomial(link = logit),
    data = cases
  )

```


5. Finally, based on model 2, fit a model where you explicitly allow for the effect of `any_girls` to differ across the values of `age` variable (i.e. add an interaction effect). Store the results in `m5`.

```{r}
#| label: girls-interaction 
#| echo: fenced
m5 <-
  glm(
    progressive_vote ~ any_girls * age + republican + age + catholic + woman +
      african + hispanic + factor(child),
    family = binomial(link = logit),
    data = cases
  )
```

6. Make a nice table with the estimates for all the models you fitted. Hide the code for the table so that only the output of the chunk is shown. (You are welcome to adapt the code from the previous problem set!)

```{r}
#| label: nice-table
#| echo: fenced

# add one row instead of categorical child variables 
rows <- tribble(~term, ~m1,  ~m2,  ~m3,  ~m4, ~m5, 
                'Number of children', ' ', 'X',  'X', 'X', 'X')
attr(rows, 'position') <- c(33) # add to row 33

modelsummary(
  models = list(m1, m2, m3, m4, m5),
  title = "The Effect of Having Daughters on Progressive Vote among Judges",
  gof_omit = "RMSE",
  align = "lccccc", # left-align first column, center others
  coef_map = c(     # change order and names of coefs
    "any_girls" = "At least 1 daughter",
    "girls" = "Daughters",
    "any_girls:age" = "At least 1 daughter $\\times$ Age",
    "factor(girls)1" = "1 daughter",
    "factor(girls)2" = "2 daughters",
    "factor(girls)3" = "3 daughter",
    "factor(girls)4" = "4 daughters",
    "factor(girls)5" = "5 daughter",
    "age" = "Age (years)",
    "catholic" = "Catholic",
    "asian" = "Asian",
    "african" = "African",
    "hispanic" = "Hispanic",
    "republican" = "Republican",
    "child" = "Number of Children",
    "woman" = "Female",
    "(Intercept)" = "Intercept"
  ),
  # coef_omit = "^factor\\(c", # hides the coefs that start as "factor(c"
  add_rows = rows,
  notes = list("Notes: Standard errors in parentheses. White is the baseline category for race."),
  fmt = 3,
  stars = T # include p-values
) %>%
  kableExtra::add_header_above(# add an extra row with
    c(" " = 1, # nothing in column 1
      "DV: Progressive Vote = 1" = 5),
    # "DV.." spread across all 5 columns with models
    bold = F,
    italic = T) %>%
  kableExtra::column_spec(2:6, width = "2cm") # set the size of 2-6 columns in table to 2 cm
```

7. Interpret the results in 3-4 sentences. Focus on the main independent variables and their effects.

> In general, having daughters seems to be related to progressive voting on the case-level, too. Both the presence (models 1 and 2) and the number of daughters (models 3 to 5) seems to have an impact on judges voting behavior. When we look closely at the effects of the number of daughters in model 4, we can observe that in comparison to having only sons, having one, two, or three daughters makes the judge more likely to vote progressively. There seem to be no significant differences for cases with more than 3 duaghters, but that is likely due to the fact that we do not observe many cases like that. When we condition the effect of having one daughter on the age of the judge, we would expect that the impact of having a duaghter somewhat decreases with age, yet the interction term alone is not statistically significant at levels below 0.1. 

8. (Optional) In the table above, hide the coefficients for `child` variable when you treat it as categorical. Instead, add a row into the table that says *Number of children* and a $\checkmark$ for the specifications where you treated that variable as categorical. Also, try to put all main treatment variables to the top of the table for better readability. 

> See code above.


## Task 2: Predicted Probabilities 

What would be the predicted probability to rule progressively for a judge that is a woman, Democrat, 40 years old at investiture, white, and catholic with 2 kids and 1 daughter vs. two sons?  Calculate the predictions for models 2 and 4 that you estimated. Please do this manually (by working with coefficients). You can check your results with a `predict()` function if you want to. Recall that you need to transform the linear predictor with a logistic function to obtain the probabilities from the log odds. Present both your log odds estimates and predicted probabilities in a nice table. 

```{r}
#| label: predictions for different models
#| echo: fenced
#| message: false
# custom inverse logit (logistic) function
inv_logit <- function(x) {
  exp(x) / (1 + exp(x))
}

# empty vector for log odds 
logodds <- NULL

# calculations for scenarios
logodds[1] <- m2$coefficients[["(Intercept)"]] + 
  m2$coefficients[["woman"]] +
  m2$coefficients[["age"]] * 40 +
  m2$coefficients[["catholic"]] + 
  m2$coefficients[["factor(child)2"]] +
  m2$coefficients[["any_girls"]] 

logodds[2] <- m2$coefficients[["(Intercept)"]] + 
  m2$coefficients[["woman"]] +
  m2$coefficients[["age"]] * 40 +
  m2$coefficients[["catholic"]] + 
  m2$coefficients[["factor(child)2"]] 

logodds[3] <- m4$coefficients[["(Intercept)"]] + 
  m4$coefficients[["woman"]] +
  m4$coefficients[["age"]] * 40 +
  m4$coefficients[["catholic"]] + 
  m4$coefficients[["factor(child)2"]] +
  m4$coefficients[["factor(girls)1"]] 

logodds[4] <- m4$coefficients[["(Intercept)"]] + 
  m4$coefficients[["woman"]] +
  m4$coefficients[["age"]] * 40 +
  m4$coefficients[["catholic"]] + 
  m4$coefficients[["factor(child)2"]] 

# place your calculations in vectors 
predprobs <- inv_logit(logodds)

# produce the nice table 
table <- bind_cols(rep(c("2", "4"), each = 2),
          rep(c("Yes", "No"), times = 2),
          logodds,
          predprobs) 
  
colnames(table) <- c("Model", "Has a Daughter", "Log Odds", "Pred. Probabilities")

table %>% 
  kable(digits = 3)
```



## Task 3: Substantive Interpretation with Simulations 

1. Start with model 2. For the same scenarios as in task 2, use simulations to account for the uncertainty for your point estimates and obtain the distributions of predicted probabilities. 

```{r}
#| label: evs-simulations-m2
set.seed(2023)
sims <- sim(m2)
evs <- sim_setx(
  sims,
  x = list(
    republican = 0,
    age = 40,
    catholic = 1,
    woman = 0,
    african = 0,
    hispanic = 0,
    child = 2,
    any_girls = 0:1
  )
)
```


2. Present the expected values graphically and numerically with `plot()` and `summary()` commands. Comment on the output in 1-2 sentences. Optionally, make custom plots with better data-to-ink ratio. 

```{r}
#| label: evs-plot-simulations-m2
summary(evs) %>% 
  kable(digits = 3)
plot(evs, level = 0.99) 
```

> Predicted probability to vote progressively for a judge that is a woman, Democrat, 40 years old at investiture, white, and catholic with 2 kids and 1 daughter ranges from `r round(summary(evs)[2,2], 2)` to `r round(summary(evs)[2,3], 2)`, based on a 95% confidence interval. For the same judge but with no daughters, on average, the probability to vote progressively on a case ranges from `r round(summary(evs)[1,2], 2)` to `r round(summary(evs)[1,3], 2)`. 

3. Calculate the first differences to quantify the effect of the `any_girls` variable on the predicted probability scale. 

```{r}
#| label: fd-simulations-m2
fds <- transform(evs,
                `FD` = `any_girls = 1` - `any_girls = 0`)
```

4. Present your first difference estimates graphically and numerically with `plot()` and `summary()` commands. Comment on the output in 1-2 sentences. Optionally, make custom plots with better data-to-ink ratio. 

```{r}
#| label: fd-plot-simulations-m2
summary(fds, level = 0.99) %>% 
  kable(digits = 3)
plot(fds, level = 0.99) 
```

> As first differences  depict, having a daughter leads to an average increase of `r round(summary(fds)[3,1], 2)` precentage points in probability to vote progressively for such a judge. This difference is also significantly different from zero (99% confidence intervals for the first difference do not include zero).

5. Would you expect the differences to change in size if you used a different scenario? Why (not)? 

> In general, we could expect the difference between the scenarios to remain significantly difference from zero, yet the exact value of difference will not be the same, as logit is not a linear model with constant marginal effects. Hence, it is important to try out different scenarios, including the one that is close to an average case in our data.


6. (Optional) Now repeat the process for model 5 (with an interaction with age). Calculate the expected values for the same scenario but for age ranging from 35 to 64 (empirical min and max). 
As a result, you will obtain the plot for the first differences. Explain the findings in 2-3 sentences. 

```{r}
#| label: simulations-m5
set.seed(2023)
sims <- sim(m5)

# store expected values for a scenario where 'age = 35:64' and 'any_girls = 0'   
evs <- clarify::sim_setx(sims, x = list(republican = 0,
                                        age = 35:64,
                                        catholic = 1,
                                        woman = 1, 
                                        african = 0,
                                        hispanic = 0, 
                                        child = 2,
                                        any_girls = 1))

# store expected values for a scenario where 'age = 35:64' and 'any_girls = 0'   
evs1 <- clarify::sim_setx(sims, x = list(republican = 0,
                                        age = 35:64,
                                        catholic = 1,
                                        woman = 1, 
                                        african = 0,
                                        hispanic = 0, 
                                        child = 2,
                                        any_girls = 0))

# E[Y|Daughter] - E[Y|No Daughters]
plot(evs - evs1) +
  labs(y = "First Differences") +
  geom_hline(yintercept = 0, lty = 2) +
  geom_rug(
    data = cases,
    aes(x = age, y = 0),
    sides = "b",
    alpha = 0.3,
    position = "jitter"
  ) 

summary(evs - evs1) %>% 
  kable(digits = 3) %>% 
  kableExtra::scroll_box(height = "250px")
```

\

> The plot shows the difference in predicted probabilities to vote progressively between a judge with and without a kid (same scenario as before) over different values of age variable with the 95% confidence intervals. For the judges over 53 years old, there seems to be no significant differences in probabilities to vote progressively when having at least one daughter versus not having any (as 95% confidence interval starts to include zero). F0r younger judges, the effect of having daughers ranges from `r round(summary(evs - evs1)[1,2], 2)` to `r round(summary(evs - evs1)[1,3], 2)` at 35 year old and `r round(summary(evs - evs1)[19,2], 2)` to `r round(summary(evs - evs1)[19,3], 2)` at 53 years old. 

7. (Optional) Now repeat the process for model 4. Calculate the expected values for the same scenario but for a range of values for the number of daughters from 0 to 3. Make sure that you also set the value of `child` variable to a meaningful constant quantity (i.e. 3 or more). Comment on the plot in 2-3 sentences. 

```{r}
#| label: simulations-m4
set.seed(2023)
sims <- sim(m4)

evs <- clarify::sim_setx(sims, x = list(republican = 0,
                                        age = 50,
                                        catholic = 1,
                                        woman = 1, 
                                        african = 0,
                                        hispanic = 0, 
                                        child = 3,
                                        girls = 0:3))

plot(evs) +
  ylim(0, 1)
summary(evs) %>% 
  kable(digits = 3)
```


> In this case, predicted probability to vote progressively changes for different numbers of daughters, with the lowest being from `r round(summary(evs)[1,2], 2)` to `r round(summary(evs)[1,3], 2)` with no daughters and highest for having three kids and all of them being daughters (average of `r round(summary(evs)[4,1], 2)`, with 95% confidence intrval of `r round(summary(evs)[4,2], 2)` to `r round(summary(evs)[4,2], 2)`). 

```{r}
transform(evs,
          `FD_3to0` = `girls = 3` - `girls = 0`,
          `FD_2to0` = `girls = 2` - `girls = 0`,
          `FD_1to0` = `girls = 1` - `girls = 0`,
          `FD_3to1` = `girls = 3` - `girls = 1`,
          `FD_2to1` = `girls = 2` - `girls = 1`,
          `FD_3to2` = `girls = 3` - `girls = 2`) %>%
  summary() %>% 
  kable(digits = 3)
```

> If we take a closer look at the differences and estimate the differences in probabilities across the scenarios, we would observe that there are significant (at 0.05 level) differences to having no daughters in each case, but there seem to be no significant differences in predicted probabilities across cases with more than one daughter. We can thus conclude that based on your data, it is the presence rather than the number of daughters that has the impact of judicial voting behavior. 

